{"pageProps":{"layoutProps":{"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Packer","url":"/packer"},{"title":"Guides","url":"/packer/guides","isCurrentPage":false},{"title":"Upgrade Your Plugin to use the Packer plugin sdk","url":"/packer/guides/1.7-plugin-upgrade","isCurrentPage":true}],"sidebarNavDataLevels":[{"levelButtonProps":{"levelDownButtonText":"Packer Home"},"menuItems":[{"leadingIconName":"home","title":"HashiCorp Developer","href":"/"},{"leadingIconName":"guide","title":"Tutorials","href":"/tutorials"},{"divider":true},{"heading":"Products"},{"leadingIconName":"hcp","title":"HashiCorp Cloud Platform","href":"/hcp"},{"leadingIconName":"terraform","title":"Terraform","href":"/terraform"},{"leadingIconName":"packer","title":"Packer","href":"/packer"},{"leadingIconName":"consul","title":"Consul","href":"/consul"},{"leadingIconName":"vault","title":"Vault","href":"/vault"},{"leadingIconName":"boundary","title":"Boundary","href":"/boundary"},{"leadingIconName":"nomad","title":"Nomad","href":"/nomad"},{"leadingIconName":"waypoint","title":"Waypoint","href":"/waypoint"},{"leadingIconName":"vagrant","title":"Vagrant","href":"/vagrant"}],"showFilterInput":false,"title":"Main Menu"},{"levelButtonProps":{"levelUpButtonText":"Main Menu","levelDownButtonText":"Previous"},"menuItems":[{"title":"Packer","fullPath":"/packer","theme":"packer"},{"title":"Install","fullPath":"/packer/install"},{"title":"Tutorials","fullPath":"/packer/tutorials"},{"title":"Documentation","fullPath":"/packer/docs"},{"title":"Guides","fullPath":"/packer/guides"},{"title":"Integrations","fullPath":"/packer/integrations"}],"showFilterInput":false,"title":"Packer","visuallyHideTitle":true},{"backToLinkProps":{"text":"Packer Home","href":"/packer"},"levelButtonProps":{"levelUpButtonText":"Packer Home"},"menuItems":[{"title":"Guides","fullPath":"/packer/guides","theme":"packer"},{"title":"Upgrade Your Plugin to use the Packer plugin sdk","path":"1.7-plugin-upgrade","filePath":"../content/guides/1.7-plugin-upgrade.mdx","fullPath":"/packer/guides/1.7-plugin-upgrade","id":"sidebar-nav-item-0"},{"title":"Upgrade Your Template to use Packer init","path":"1.7-template-upgrade","filePath":"../content/guides/1.7-template-upgrade.mdx","fullPath":"/packer/guides/1.7-template-upgrade","id":"sidebar-nav-item-1"},{"title":"HCL guides","routes":[{"title":"Overview","path":"hcl","filePath":"../content/guides/hcl/index.mdx","fullPath":"/packer/guides/hcl","id":"sidebar-nav-item-3"},{"title":"Variables","path":"hcl/variables","filePath":"../content/guides/hcl/variables.mdx","fullPath":"/packer/guides/hcl/variables","id":"sidebar-nav-item-4"},{"title":"Upgrade Packer JSON Template to HCL2","href":"/packer/tutorials/configuration-language/hcl2-upgrade","id":"sidebar-nav-item-5"},{"title":"Making a plugin HCL2 enabled","path":"hcl/component-object-spec","filePath":"../content/guides/hcl/component-object-spec.mdx","fullPath":"/packer/guides/hcl/component-object-spec","id":"sidebar-nav-item-6"}],"id":"sidebar-nav-item-2"},{"title":"Automatic OS Installs","routes":[{"title":"Overview","path":"automatic-operating-system-installs","filePath":"../content/guides/automatic-operating-system-installs/index.mdx","fullPath":"/packer/guides/automatic-operating-system-installs","id":"sidebar-nav-item-8"},{"title":"Unattended Installation for Windows","path":"automatic-operating-system-installs/autounattend_windows","filePath":"../content/guides/automatic-operating-system-installs/autounattend_windows.mdx","fullPath":"/packer/guides/automatic-operating-system-installs/autounattend_windows","id":"sidebar-nav-item-9"},{"title":"Unattended Installation for Debian","path":"automatic-operating-system-installs/preseed_ubuntu","filePath":"../content/guides/automatic-operating-system-installs/preseed_ubuntu.mdx","fullPath":"/packer/guides/automatic-operating-system-installs/preseed_ubuntu","id":"sidebar-nav-item-10"}],"id":"sidebar-nav-item-7"},{"title":"Build Immutable Infrastructure with Packer in CI/CD","routes":[{"title":"Overview","path":"packer-on-cicd","filePath":"../content/guides/packer-on-cicd/index.mdx","fullPath":"/packer/guides/packer-on-cicd","id":"sidebar-nav-item-12"},{"title":"Build Images in CI/CD","path":"packer-on-cicd/build-image-in-cicd","filePath":"../content/guides/packer-on-cicd/build-image-in-cicd.mdx","fullPath":"/packer/guides/packer-on-cicd/build-image-in-cicd","id":"sidebar-nav-item-13"},{"title":"Build a VirtualBox Image with Packer in TeamCity","path":"packer-on-cicd/build-virtualbox-image","filePath":"../content/guides/packer-on-cicd/build-virtualbox-image.mdx","fullPath":"/packer/guides/packer-on-cicd/build-virtualbox-image","id":"sidebar-nav-item-14"},{"title":"Pipelineing Builds","path":"packer-on-cicd/pipelineing-builds","filePath":"../content/guides/packer-on-cicd/pipelineing-builds.mdx","fullPath":"/packer/guides/packer-on-cicd/pipelineing-builds","id":"sidebar-nav-item-15"},{"title":"Trigger Terraform Enterprise runs","path":"packer-on-cicd/trigger-tfe","filePath":"../content/guides/packer-on-cicd/trigger-tfe.mdx","fullPath":"/packer/guides/packer-on-cicd/trigger-tfe","id":"sidebar-nav-item-16"},{"title":"Upload a VirtualBox Image to S3","path":"packer-on-cicd/upload-images-to-artifact","filePath":"../content/guides/packer-on-cicd/upload-images-to-artifact.mdx","fullPath":"/packer/guides/packer-on-cicd/upload-images-to-artifact","id":"sidebar-nav-item-17"}],"id":"sidebar-nav-item-11"}],"title":"Guides","visuallyHideTitle":true}],"mainWidth":"narrow","githubFileUrl":"https://github.com/hashicorp/packer/blob/main/website/../content/guides/1.7-plugin-upgrade.mdx"},"metadata":{"title":"Upgrading your plugin to use the Packer plugin sdk","description":"Learn how to upgrade your plugin to support v1.7.0 and later.","layout":null},"outlineItems":[{"title":"Upgrading your plugin to be compatible with Packer v1.7.0 and later","url":"#upgrading-your-plugin-to-be-compatible-with-packer-v1-7-0-and-later"},{"title":"Update plugins to use the new SDK","url":"#update-plugins-to-use-the-new-sdk"},{"title":"Upgrade Plugins to use the new multi-component RPC server","url":"#upgrade-plugins-to-use-the-new-multi-component-rpc-server"},{"title":"Registering multiple components","url":"#registering-multiple-components"},{"title":"Distributing migrated plugins","url":"#distributing-migrated-plugins"}],"pageHeading":{"id":"upgrading-your-plugin-to-be-compatible-with-packer-v1-7-0-and-later","title":"Upgrading your plugin to be compatible with Packer v1.7.0 and later"},"mdxSource":{"compiledSource":"const layoutProps={};const MDXLayout=\"wrapper\";function MDXContent({components,...props}){return mdx(MDXLayout,{...layoutProps,...props,components:components,mdxType:\"MDXLayout\"},mdx(\"p\",null,`In version v1.7.0 the Packer plugin development model was split into two separate packages: the Packer core\nand the Packer plugin SDK. Prior to version 1.7.0, the Packer core repository (`,mdx(\"a\",{parentName:\"p\",\"href\":\"https://github.com/hashicorp/packer\"},`https://github.com/hashicorp/packer`),`) contained the libraries and interfaces used by Packer plugins. In version 1.7.0, these libraries were moved into their own repository (`,mdx(\"a\",{parentName:\"p\",\"href\":\"https://github.com/hashicorp/packer-plugin-sdk\"},`https://github.com/hashicorp/packer-plugin-sdk`),`). If you authored a plugin prior to the v1.7.0 release using the API version 4, you should switch to the Packer Plugin SDK.`),mdx(\"h2\",{\"id\":\"update-plugins-to-use-the-new-sdk\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#update-plugins-to-use-the-new-sdk\",\"aria-label\":\"update plugins to use the new sdk permalink\"},`\\xbb`),`Update plugins to use the new SDK`),mdx(\"h3\",{\"id\":\"why-update-to-the-new-sdk\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#why-update-to-the-new-sdk\",\"aria-label\":\"why update to the new sdk permalink\"},`\\xbb`),`Why update to the new SDK?`),mdx(\"p\",null,`The goal of the SDK is to clearly separate the Packer core from the Packer plugins; as a plugin maintainer, you should only have to import the SDK and not the core. The SDK will allow us to use semantic versioning to express the changes to the API that our maintainers are expected to use, and will help us keep a clearer promise to you about the location and functionality of our helper tools.`),mdx(\"h3\",{\"id\":\"how-to-update-plugins-to-use-the-packer-plugin-sdk\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#how-to-update-plugins-to-use-the-packer-plugin-sdk\",\"aria-label\":\"how to update plugins to use the packer plugin sdk permalink\"},`\\xbb`),`How to update plugins to use the Packer plugin SDK`),mdx(\"p\",null,`We have created a `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://github.com/hashicorp/packer-sdk-migrator\"},`packer-sdk-migrator`),` cli tool to help you migrate your plugin to use the new import paths. To use it, follow the installation instructions for the migration tool, then call `,mdx(\"inlineCode\",{parentName:\"p\"},`packer-sdk-migrator migrate`),` from the root of your plugin directory. More details can be found in the migrator's `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://github.com/hashicorp/packer-sdk-migrator/blob/main/README.md\"},`README`),`.`),mdx(\"p\",null,`Once you have migrated your plugin to the new SDK, your users can continue using your plugin as they always have, manually installing it in their `,mdx(\"inlineCode\",{parentName:\"p\"},`plugins`),` directories. However, Packer v1.7 also introduced the `,mdx(\"inlineCode\",{parentName:\"p\"},`packer init`),` command, and since you're here anyway it's a great time to upgrade your plugin so it can be found by `,mdx(\"inlineCode\",{parentName:\"p\"},`packer init`),`. Keep reading for more details!`),mdx(\"h2\",{\"id\":\"upgrade-plugins-to-use-the-new-multi-component-rpc-server\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#upgrade-plugins-to-use-the-new-multi-component-rpc-server\",\"aria-label\":\"upgrade plugins to use the new multi component rpc server permalink\"},`\\xbb`),`Upgrade Plugins to use the new multi-component RPC server`),mdx(\"h3\",{\"id\":\"why-is-there-a-new-rpc-server\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#why-is-there-a-new-rpc-server\",\"aria-label\":\"why is there a new rpc server permalink\"},`\\xbb`),`Why is there a new RPC server?`),mdx(\"p\",null,`There are two main reasons we wrote the new server type.`),mdx(\"p\",null,`First, it enables multiple related components, for example a builder and a post-processor that share a hypervisor or cloud, to live together in the same plugin. This helps maintainers who are experts in a specific technology to focus on that technology without having to maintain several repositories that submodule the same common code. You can think of a multi-component plugin as being in some ways analogous to Terraform providers, in the sense that both frequently bundle common resources or components by hypervisor or cloud.`),mdx(\"p\",null,`Second, the new server provides the Packer core with structured metadata that allows the new `,mdx(\"inlineCode\",{parentName:\"p\"},`packer init`),` feature to work. This data includes semantic versioning that we need to implement the new `,mdx(\"a\",{parentName:\"p\",\"href\":\"/packer/docs/templates/hcl_templates/blocks/packer#specifying-plugin-requirements\"},mdx(\"inlineCode\",{parentName:\"a\"},`required_plugins`)),` block, which allows us to ensure that users are using the correct `,mdx(\"em\",{parentName:\"p\"},`version`),` of their plugin for a given Packer template. If you don't upgrade, your users cannot take advantage of the `,mdx(\"inlineCode\",{parentName:\"p\"},`packer init`),` tooling.`),mdx(\"h3\",{\"id\":\"how-to-upgrade-the-plugin\"},mdx(\"a\",{parentName:\"h3\",\"className\":\"__permalink-h\",\"href\":\"#how-to-upgrade-the-plugin\",\"aria-label\":\"how to upgrade the plugin permalink\"},`\\xbb`),`How to upgrade the plugin`),mdx(\"p\",null,`We've created a `,mdx(\"a\",{parentName:\"p\",\"href\":\"https://github.com/hashicorp/packer-plugin-scaffolding/\"},`scaffolding repository`),` that you can either clone or use as a reference example. If you already have a working plugin, it should look pretty familiar. You'll notice, however, that there are some changes to main.go.`),mdx(\"p\",null,`Previously, you may have had a main.go that looks something like:`),mdx(\"pre\",{\"style\":{\"backgroundColor\":\"var(--hds-code-block-color-surface-primary)\",\"color\":\"var(--hds-code-block-color-token)\"},\"tabindex\":\"0\",\"language\":\"go\",\"className\":\"language-go\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-go\"},mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`package`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},` main`)),`\n`,`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`import`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` (`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`  \"github.com/hashicorp/packer-plugin-sdk/plugin\"`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`)`)),`\n`,`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`func`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},` main`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`() {`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  server, err `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`:=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` plugin.`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`Server`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`()`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`  if`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` err `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`!=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` nil`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`    panic`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`(err)`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  }`)),`\n`,`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-comment)\"}},`  // MyProvisioner fulfils the Provisioner interface and is defined elsewhere`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  server.`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`RegisterProvisioner`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`(`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`new`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`(`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`MyProvisioner`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`))`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  server.`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`Serve`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`()`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`}`)),`\n`,`\n`)),mdx(\"p\",null,`With this single-component plugin binary you'd install it by putting it into the plugin directory with the name `,mdx(\"inlineCode\",{parentName:\"p\"},`packer-provisioner-foo`),`, and to access your provisioner in your Packer template, you would use the type `,mdx(\"inlineCode\",{parentName:\"p\"},`foo`),`.`),mdx(\"p\",null,`To use the new multi-component server, you'll want to use the NewSet() function to create a server:`),mdx(\"pre\",{\"style\":{\"backgroundColor\":\"var(--hds-code-block-color-surface-primary)\",\"color\":\"var(--hds-code-block-color-token)\"},\"tabindex\":\"0\",\"language\":\"go\",\"className\":\"language-go\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-go\"},mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`package`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},` main`)),`\n`,`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`import`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` (`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`  \"fmt\"`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`  \"os\"`)),`\n`,`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`  \"github.com/hashicorp/packer-plugin-sdk/plugin\"`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`)`)),`\n`,`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`func`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},` main`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`() {`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  pps `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`:=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` plugin.`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`NewSet`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`()`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  pps.`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`RegisterProvisioner`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`(plugin.DEFAULT_NAME, `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`new`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`(`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`MyProvisioner`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`))`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  err `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`:=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` pps.`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`Run`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`()`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`  if`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` err `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`!=`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},` nil`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` {`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    fmt.`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`Fprintln`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`(os.Stderr, err.`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`Error`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`())`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`    os.`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`Exit`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`(`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-constant)\"}},`1`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`)`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`  }`)),`\n`,mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`}`)),`\n`,`\n`)),mdx(\"p\",null,`The implementation is similar, but now we use the \"NewSet\" function to create the component Server, and call Run() instead of Serve().`),mdx(\"p\",null,`You build it as you would any Go binary:`),mdx(\"pre\",{\"style\":{\"backgroundColor\":\"var(--hds-code-block-color-surface-primary)\",\"color\":\"var(--hds-code-block-color-token)\"},\"tabindex\":\"0\",\"language\":\"go\",\"className\":\"language-go\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-go\"},mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`go`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},` build `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`-`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`o packer`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`-`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`plugin`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-keyword)\"}},`-`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`bar`)),`\n`)),mdx(\"p\",null,`Then you install it by putting it into the plugin directory with the name `,mdx(\"inlineCode\",{parentName:\"p\"},`packer-plugin-foo`),`, and reference it in your template using the type \"foo\".`),mdx(\"p\",null,`Notice that the new naming convention uses the generic name \"plugin\" as opposed to saying the specific component type like the old style did; `,mdx(\"inlineCode\",{parentName:\"p\"},`packer-pluign-name`),` instead of `,mdx(\"inlineCode\",{parentName:\"p\"},`packer-provisioner-name`),`. You need to respect this new convention when installing the plugin, or Packer will not register it as a multi-component plugin.`),mdx(\"p\",null,`What does that `,mdx(\"inlineCode\",{parentName:\"p\"},`plugin.DEFAULT_NAME`),` do? It tells the Packer core that in your template you'll be using the root plugin name instead of a compound name composed of the plugin name and the component name. If you are only serving a single component, you may want to use `,mdx(\"inlineCode\",{parentName:\"p\"},`plugin.DEFAULT_NAME`),` to prevent your templates from stuttering.`),mdx(\"p\",null,`Here's an example using a custom string instead of `,mdx(\"inlineCode\",{parentName:\"p\"},`plugin.DEFAULT_NAME`),`:`),mdx(\"pre\",{\"style\":{\"backgroundColor\":\"var(--hds-code-block-color-surface-primary)\",\"color\":\"var(--hds-code-block-color-token)\"},\"tabindex\":\"0\",\"language\":\"go\",\"className\":\"language-go\"},mdx(\"code\",{parentName:\"pre\",\"className\":\"language-go\"},mdx(\"span\",{parentName:\"code\",\"className\":\"line\"},mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`pps.`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`RegisterProvisioner`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`(`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-string)\"}},`\"bar\"`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`, `),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`new`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`(`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-function)\"}},`MyProvisioner`),mdx(\"span\",{parentName:\"span\",\"style\":{\"color\":\"var(--hds-code-block-color-token)\"}},`))`)),`\n`)),mdx(\"p\",null,`When you do this, if you install your plugin as `,mdx(\"inlineCode\",{parentName:\"p\"},`packer-plugin-foo`),`, the Packer core expects you to access the provisioner in your template using the type `,mdx(\"inlineCode\",{parentName:\"p\"},`foo-bar`),`, where \"foo\" is the last portion of the plugin name as installed and \"bar\" is the name of the provisioner that you registered.`),mdx(\"h2\",{\"id\":\"registering-multiple-components\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#registering-multiple-components\",\"aria-label\":\"registering multiple components permalink\"},`\\xbb`),`Registering multiple components`),mdx(\"p\",null,`The goal of this guide is to help you upgrade a single-component plugin to use the new SDK and plugin server; check out our `,mdx(\"a\",{parentName:\"p\",\"href\":\"/packer/docs/plugins/creation#plugin-development-basics\"},`Plugin Development Basics`),` guide for details on how to add new components to your plugin.`),mdx(\"h2\",{\"id\":\"distributing-migrated-plugins\"},mdx(\"a\",{parentName:\"h2\",\"className\":\"__permalink-h\",\"href\":\"#distributing-migrated-plugins\",\"aria-label\":\"distributing migrated plugins permalink\"},`\\xbb`),`Distributing migrated plugins`),mdx(\"p\",null,`Once a plugin has been migrated to use the `,mdx(\"inlineCode\",{parentName:\"p\"},`packer-plugin-sdk`),` it can be released as it normally would and used by Packer by `,mdx(\"a\",{parentName:\"p\",\"href\":\"/packer/docs/plugins#installing-plugins\"},`installing the plugin`),` manually into the Packer plugin directory. But this method will not allow your users to take advantage of the `,mdx(\"inlineCode\",{parentName:\"p\"},`packer init`),` command.`),mdx(\"p\",null,`If you want Packer to be able to automatically install your plugin for your users via`,mdx(\"inlineCode\",{parentName:\"p\"},`packer init`),` -- the preferred method of installation -- you need to make the plugin available on GitHub in a repository named after the multi-component plugin. `,mdx(\"inlineCode\",{parentName:\"p\"},`https://github.com/<yourorg>/packer-plugin-name`),`. We recognize that this may require you to rename or fork your plugin repository, but we think that it is worth the inconvenience to reduce ambiguity in the `,mdx(\"inlineCode\",{parentName:\"p\"},`init`),` call.`),mdx(\"p\",null,`See our documentation on `,mdx(\"a\",{parentName:\"p\",\"href\":\"/packer/docs/plugins/creation#creating-a-github-release\"},`Creating a GitHub Release`),` for details on the recommended practice for releasing Packer plugins on GitHub.`))};MDXContent.isMDXComponent=true;","scope":{"version":"latest"}},"product":{"name":"Packer","slug":"packer","algoliaConfig":{"indexName":"product_PACKER","searchOnlyApiKey":"4e1ea7f4bf4335ac43d9f28463e42148"},"analyticsConfig":{"includedDomains":"packer.io www.packer.io","segmentWriteKey":"AjXdfmTTk1I9q9dfyePuDFHBrz1tCO3l"},"datoToken":"88b4984480dad56295a8aadae6caad","metadata":{"title":"Packer by HashiCorp","description":"Packer helps you create golden images for multiple platforms from a single source configuration.","image":"https://docs.hashicorp.com/sentinel-public/img/og-image.png","icon":[{"href":"/sentinel-public/favicon.svg","sizes":"16x16"},{"href":"/sentinel-public/favicon.svg","sizes":"32x32"},{"href":"/sentinel-public/favicon.svg","sizes":"96x96"},{"href":"/sentinel-public/favicon.svg","sizes":"192x192"}]},"alertBannerActive":true,"alertBanner":{"tag":"HashiDays","url":"https://hashicorp.com/conferences/hashidays","text":"One conference. Three cities.","linkText":"Find a city near you","expirationDate":"2024-06-14T00:00:00-08:00"},"version":"1.7.10","basePaths":["docs","guides","intro","downloads"],"rootDocsPaths":[{"iconName":"docs","name":"Documentation","path":"docs"},{"iconName":"guide","name":"Guides","path":"guides"}],"integrationsConfig":{"description":"A curated collection of official, partner, and community Packer Integrations."},"currentRootDocsPath":{"iconName":"guide","name":"Guides","path":"guides"}},"projectName":null,"versions":null},"__N_SSG":true}