{"pageProps":{"layoutProps":{"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Packer","url":"/packer"},{"title":"Plugins","url":"/packer/plugins"},{"title":"Builders"},{"title":"Outscale","key":"outscale/packer-plugin-outscale"},{"title":"chroot","url":"/packer/plugins/builders/outscale/outscale-chroot","isCurrentPage":true}],"githubFileUrl":"https://github.com/outscale/packer-plugin-outscale/blob/main/docs/builders/outscale-chroot.mdx","sidebarNavDataLevels":[{"levelButtonProps":{"levelDownButtonText":"Packer Home"},"menuItems":[{"leadingIconName":"home","title":"HashiCorp Developer","href":"/"},{"leadingIconName":"guide","title":"Tutorials","href":"/tutorials"},{"divider":true},{"heading":"Products"},{"leadingIconName":"hcp","title":"HashiCorp Cloud Platform","href":"/hcp"},{"leadingIconName":"terraform","title":"Terraform","href":"/terraform"},{"leadingIconName":"packer","title":"Packer","href":"/packer"},{"leadingIconName":"consul","title":"Consul","href":"/consul"},{"leadingIconName":"vault","title":"Vault","href":"/vault"},{"leadingIconName":"boundary","title":"Boundary","href":"/boundary"},{"leadingIconName":"nomad","title":"Nomad","href":"/nomad"},{"leadingIconName":"waypoint","title":"Waypoint","href":"/waypoint"},{"leadingIconName":"vagrant","title":"Vagrant","href":"/vagrant"}],"showFilterInput":false,"title":"Main Menu"},{"levelButtonProps":{"levelUpButtonText":"Main Menu","levelDownButtonText":"Previous"},"menuItems":[{"title":"Packer","fullPath":"/packer","theme":"packer"},{"title":"Install","fullPath":"/packer/downloads"},{"title":"Tutorials","fullPath":"/packer/tutorials"},{"title":"Documentation","fullPath":"/packer/docs"},{"title":"Guides","fullPath":"/packer/guides"},{"title":"Plugins","fullPath":"/packer/plugins"},{"title":"Integrations","fullPath":"/packer/integrations"}],"showFilterInput":false,"title":"Packer","visuallyHideTitle":true},{"backToLinkProps":{"text":"Packer Home","href":"/packer"},"levelButtonProps":{"levelUpButtonText":"Packer Home"},"menuItems":[{"title":"Plugins","fullPath":"/packer/plugins","theme":"packer"},{"divider":true,"id":"sidebar-nav-item-2"},{"title":"Anka","routes":[{"title":"Post-Processors","routes":[{"title":"Anka Registry Push","path":"post-processors/anka","remoteFile":{"filePath":"docs/post-processors/anka-registry-push.mdx"},"pluginData":{"title":"Anka","path":"anka","repo":"veertuinc/packer-plugin-veertu-anka","pluginTier":"community","sourceBranch":"master","version":"latest","files":[]},"fullPath":"/packer/plugins/post-processors/anka","id":"sidebar-nav-item-5"}],"id":"sidebar-nav-item-4"},{"title":"Builders","routes":[{"title":"VM Clone","path":"builders/anka/vm-clone","remoteFile":{"filePath":"docs/builders/vm-clone.mdx"},"pluginData":{"title":"Anka","path":"anka","repo":"veertuinc/packer-plugin-veertu-anka","pluginTier":"community","sourceBranch":"master","version":"latest","files":[]},"fullPath":"/packer/plugins/builders/anka/vm-clone","id":"sidebar-nav-item-7"},{"title":"VM Create","path":"builders/anka/vm-create","remoteFile":{"filePath":"docs/builders/vm-create.mdx"},"pluginData":{"title":"Anka","path":"anka","repo":"veertuinc/packer-plugin-veertu-anka","pluginTier":"community","sourceBranch":"master","version":"latest","files":[]},"fullPath":"/packer/plugins/builders/anka/vm-create","id":"sidebar-nav-item-8"}],"id":"sidebar-nav-item-6"}],"id":"sidebar-nav-item-3"},{"title":"DigitalOcean","routes":[{"title":"Builders","routes":[{"title":"digitalocean","path":"builders/digitalocean","remoteFile":{"filePath":"docs/builders/digitalocean.mdx"},"pluginData":{"title":"DigitalOcean","path":"digitalocean","repo":"digitalocean/packer-plugin-digitalocean","pluginTier":"verified","version":"latest","isHcpPackerReady":true,"files":[]},"fullPath":"/packer/plugins/builders/digitalocean","id":"sidebar-nav-item-11"}],"id":"sidebar-nav-item-10"},{"title":"Data Sources","routes":[{"title":"digitalocean-image","path":"datasources/digitalocean","remoteFile":{"filePath":"docs/datasources/digitalocen-image.mdx"},"pluginData":{"title":"DigitalOcean","path":"digitalocean","repo":"digitalocean/packer-plugin-digitalocean","pluginTier":"verified","version":"latest","isHcpPackerReady":true,"files":[]},"fullPath":"/packer/plugins/datasources/digitalocean","id":"sidebar-nav-item-13"}],"id":"sidebar-nav-item-12"},{"title":"Post-Processors","routes":[{"title":"digitalocean-import","path":"post-processors/digitalocean","remoteFile":{"filePath":"docs/post-processors/digitalocean-import.mdx"},"pluginData":{"title":"DigitalOcean","path":"digitalocean","repo":"digitalocean/packer-plugin-digitalocean","pluginTier":"verified","version":"latest","isHcpPackerReady":true,"files":[]},"fullPath":"/packer/plugins/post-processors/digitalocean","id":"sidebar-nav-item-15"}],"id":"sidebar-nav-item-14"}],"id":"sidebar-nav-item-9"},{"title":"External","routes":[{"title":"Data Sources","routes":[{"title":"Overview","path":"datasources/external","remoteFile":{"filePath":"docs/datasources/index.mdx"},"pluginData":{"title":"External","path":"external","repo":"joomcode/packer-plugin-external","version":"latest","sourceBranch":"main","pluginTier":"community","files":[]},"fullPath":"/packer/plugins/datasources/external","id":"sidebar-nav-item-18"},{"title":"External","path":"datasources/external/external","remoteFile":{"filePath":"docs/datasources/external.mdx"},"pluginData":{"title":"External","path":"external","repo":"joomcode/packer-plugin-external","version":"latest","sourceBranch":"main","pluginTier":"community","files":[]},"fullPath":"/packer/plugins/datasources/external/external","id":"sidebar-nav-item-19"},{"title":"External Raw","path":"datasources/external/raw","remoteFile":{"filePath":"docs/datasources/raw.mdx"},"pluginData":{"title":"External","path":"external","repo":"joomcode/packer-plugin-external","version":"latest","sourceBranch":"main","pluginTier":"community","files":[]},"fullPath":"/packer/plugins/datasources/external/raw","id":"sidebar-nav-item-20"}],"id":"sidebar-nav-item-17"}],"id":"sidebar-nav-item-16"},{"title":"Git","routes":[{"title":"Data Sources","routes":[{"title":"Overview","path":"datasources/git","remoteFile":{"filePath":"docs/datasources/index.mdx"},"pluginData":{"title":"Git","path":"git","repo":"ethanmdavidson/packer-plugin-git","version":"latest","sourceBranch":"main","pluginTier":"community","files":[]},"fullPath":"/packer/plugins/datasources/git","id":"sidebar-nav-item-23"},{"title":"Commit","path":"datasources/git/commit","remoteFile":{"filePath":"docs/datasources/commit.mdx"},"pluginData":{"title":"Git","path":"git","repo":"ethanmdavidson/packer-plugin-git","version":"latest","sourceBranch":"main","pluginTier":"community","files":[]},"fullPath":"/packer/plugins/datasources/git/commit","id":"sidebar-nav-item-24"},{"title":"Repository","path":"datasources/git/repository","remoteFile":{"filePath":"docs/datasources/repository.mdx"},"pluginData":{"title":"Git","path":"git","repo":"ethanmdavidson/packer-plugin-git","version":"latest","sourceBranch":"main","pluginTier":"community","files":[]},"fullPath":"/packer/plugins/datasources/git/repository","id":"sidebar-nav-item-25"},{"title":"Tree","path":"datasources/git/tree","remoteFile":{"filePath":"docs/datasources/tree.mdx"},"pluginData":{"title":"Git","path":"git","repo":"ethanmdavidson/packer-plugin-git","version":"latest","sourceBranch":"main","pluginTier":"community","files":[]},"fullPath":"/packer/plugins/datasources/git/tree","id":"sidebar-nav-item-26"}],"id":"sidebar-nav-item-22"}],"id":"sidebar-nav-item-21"},{"title":"Gridscale","routes":[{"title":"Builders","routes":[{"title":"gridscale","path":"builders/gridscale","remoteFile":{"filePath":"docs/builders/gridscale.mdx"},"pluginData":{"title":"Gridscale","path":"gridscale","repo":"gridscale/packer-plugin-gridscale","version":"latest","pluginTier":"verified","isHcpPackerReady":false,"files":[]},"fullPath":"/packer/plugins/builders/gridscale","id":"sidebar-nav-item-29"}],"id":"sidebar-nav-item-28"}],"id":"sidebar-nav-item-27"},{"title":"IPSW","routes":[{"title":"Data Sources","routes":[{"title":"IPSW","path":"datasources/ipsw","remoteFile":{"filePath":"docs/datasources/ipsw.mdx"},"pluginData":{"title":"IPSW","path":"ipsw","repo":"torarnv/packer-plugin-ipsw","version":"latest","sourceBranch":"main","pluginTier":"community","files":[]},"fullPath":"/packer/plugins/datasources/ipsw","id":"sidebar-nav-item-32"}],"id":"sidebar-nav-item-31"}],"id":"sidebar-nav-item-30"},{"title":"Kamatera","routes":[{"title":"Builders","routes":[{"title":"Kamatera","path":"builders/kamatera","remoteFile":{"filePath":"docs/builders/kamatera.mdx"},"pluginData":{"title":"Kamatera","path":"kamatera","repo":"kamatera/packer-plugin-kamatera","pluginTier":"community","version":"latest","files":[]},"fullPath":"/packer/plugins/builders/kamatera","id":"sidebar-nav-item-35"}],"id":"sidebar-nav-item-34"}],"id":"sidebar-nav-item-33"},{"title":"Linode","routes":[{"title":"Builders","routes":[{"title":"Linode","path":"builders/linode","remoteFile":{"filePath":"docs/builders/linode.mdx"},"pluginData":{"title":"Linode","path":"linode","repo":"linode/packer-plugin-linode","pluginTier":"verified","version":"latest","isHcpPackerReady":true,"files":[]},"fullPath":"/packer/plugins/builders/linode","id":"sidebar-nav-item-38"}],"id":"sidebar-nav-item-37"}],"id":"sidebar-nav-item-36"},{"title":"Libvirt","routes":[{"title":"Builders","routes":[{"title":"Libvirt","path":"builders/libvirt","remoteFile":{"filePath":"docs/builders/libvirt.mdx"},"pluginData":{"title":"Libvirt","path":"libvirt","repo":"thomasklein94/packer-plugin-libvirt","pluginTier":"community","version":"latest","files":[]},"fullPath":"/packer/plugins/builders/libvirt","id":"sidebar-nav-item-41"}],"id":"sidebar-nav-item-40"}],"id":"sidebar-nav-item-39"},{"title":"Mondoo","routes":[{"title":"Provisioners","routes":[{"title":"cnspec","path":"provisioners/mondoo/cnspec","remoteFile":{"filePath":"docs/provisioners/cnspec.mdx"},"pluginData":{"title":"Mondoo","path":"mondoo","repo":"mondoohq/packer-plugin-mondoo","pluginTier":"verified","version":"latest","files":[]},"fullPath":"/packer/plugins/provisioners/mondoo/cnspec","id":"sidebar-nav-item-44"},{"title":"Mondoo","path":"provisioners/mondoo/mondoo","remoteFile":{"filePath":"docs/provisioners/mondoo.mdx"},"pluginData":{"title":"Mondoo","path":"mondoo","repo":"mondoohq/packer-plugin-mondoo","pluginTier":"verified","version":"latest","files":[]},"fullPath":"/packer/plugins/provisioners/mondoo/mondoo","id":"sidebar-nav-item-45"}],"id":"sidebar-nav-item-43"}],"id":"sidebar-nav-item-42"},{"title":"Nutanix","routes":[{"title":"Builders","routes":[{"title":"Overview","path":"builders/nutanix","remoteFile":{"filePath":"docs/builders/index.mdx"},"pluginData":{"title":"Nutanix","path":"nutanix","repo":"nutanix-cloud-native/packer-plugin-nutanix","version":"latest","pluginTier":"verified","sourceBranch":"main","files":[]},"fullPath":"/packer/plugins/builders/nutanix","id":"sidebar-nav-item-48"},{"title":"Nutanix","path":"builders/nutanix/nutanix","remoteFile":{"filePath":"docs/builders/nutanix.mdx"},"pluginData":{"title":"Nutanix","path":"nutanix","repo":"nutanix-cloud-native/packer-plugin-nutanix","version":"latest","pluginTier":"verified","sourceBranch":"main","files":[]},"fullPath":"/packer/plugins/builders/nutanix/nutanix","id":"sidebar-nav-item-49"}],"id":"sidebar-nav-item-47"}],"id":"sidebar-nav-item-46"},{"title":"Outscale","routes":[{"title":"Builders","routes":[{"title":"Overview","path":"builders/outscale","remoteFile":{"filePath":"docs/builders/index.mdx"},"pluginData":{"title":"Outscale","path":"outscale","repo":"outscale/packer-plugin-outscale","version":"latest","pluginTier":"verified","isHcpPackerReady":true,"files":[]},"fullPath":"/packer/plugins/builders/outscale","id":"sidebar-nav-item-52"},{"title":"BSU","path":"builders/outscale/outscale-bsu","remoteFile":{"filePath":"docs/builders/outscale-bsu.mdx"},"pluginData":{"title":"Outscale","path":"outscale","repo":"outscale/packer-plugin-outscale","version":"latest","pluginTier":"verified","isHcpPackerReady":true,"files":[]},"fullPath":"/packer/plugins/builders/outscale/outscale-bsu","id":"sidebar-nav-item-53"},{"title":"BSU Surrogate","path":"builders/outscale/outscale-bsusurrogate","remoteFile":{"filePath":"docs/builders/outscale-bsusurrogate.mdx"},"pluginData":{"title":"Outscale","path":"outscale","repo":"outscale/packer-plugin-outscale","version":"latest","pluginTier":"verified","isHcpPackerReady":true,"files":[]},"fullPath":"/packer/plugins/builders/outscale/outscale-bsusurrogate","id":"sidebar-nav-item-54"},{"title":"BSU Volume","path":"builders/outscale/outscale-bsuvolume","remoteFile":{"filePath":"docs/builders/outscale-bsuvolume.mdx"},"pluginData":{"title":"Outscale","path":"outscale","repo":"outscale/packer-plugin-outscale","version":"latest","pluginTier":"verified","isHcpPackerReady":true,"files":[]},"fullPath":"/packer/plugins/builders/outscale/outscale-bsuvolume","id":"sidebar-nav-item-55"},{"title":"chroot","path":"builders/outscale/outscale-chroot","remoteFile":{"filePath":"docs/builders/outscale-chroot.mdx","fileString":"---\ndescription: >\n  The amazon-chroot Packer builder is able to create Outscale OMIs backed by an\n  BSU\n\n  volume as the root device. For more information on the difference between\n\n  instance storage and BSU-backed instances, storage for the root device section\n\n  in the Outscale documentation.\npage_title: Outscale chroot - Builders\nnav_title: chroot\n---\n\n# OMI Builder (chroot)\n\nType: `outscale-chroot`\nArtifact BuilderId: `oapi.outscale.chroot`\n\nThe `outscale-chroot` Packer builder is able to create Outscale Machine Images (OMIs) backed by an\nBSU volume as the root device. For more information on the difference between\ninstance storage and BSU-backed instances, see the [\"storage for the root\ndevice\" section in the Outscale\ndocumentation](https://docs.outscale.com/en/userguide/Home.html).\n\nThe difference between this builder and the `outscale-bsu` builder is that this\nbuilder is able to build an BSU-backed OMI without launching a new Outscale\nVM. This can dramatically speed up OMI builds for organizations who need\nthe extra fast build.\n\n~> **This is an advanced builder** If you're just getting started with\nPacker, we recommend starting with the [outscale-bsu\nbuilder](/docs/builders/outscale-bsu), which is much easier to use.\n\nThe builder does _not_ manage OMIs. Once it creates an OMI and stores it in\nyour account, it is up to you to use, delete, etc., the OMI.\n\n## How Does it Work?\n\nThis builder works by creating a new BSU volume from an existing source OMI and\nattaching it into an already-running Outscale VM. Once attached, a\n[chroot](https://en.wikipedia.org/wiki/Chroot) is used to provision the system\nwithin that volume. After provisioning, the volume is detached, snapshotted,\nand an OMI is made.\n\nUsing this process, minutes can be shaved off the OMI creation process because\na new Outscale VM doesn't need to be launched.\n\nThere are some restrictions, however. The host Outscale instance where the volume is\nattached to must be a similar system (generally the same OS version, kernel\nversions, etc.) as the OMI being built. Additionally, this process is much more\nexpensive because the Outscale VM must be kept running persistently in order\nto build OMIs, whereas the other OMI builders start VMs on-demand to\nbuild OMIs as needed.\n\n## Configuration Reference\n\nThere are many configuration options available for the builder. They are\nsegmented below into two categories: required and optional parameters. Within\neach category, the available configuration keys are alphabetized.\n\n### Required:\n\n- `access_key` (string) - The access key used to communicate with OUTSCALE. [Learn how to set this](/docs/builders/outscale#authentication)\n\n- `omi_name` (string) - The name of the resulting OMIS that will appear when managing OMIs in the Outscale console or via APIs. This must be unique. To help make this unique, use a function like `timestamp` (see [template engine](/docs/templates/legacy_json_templates/engine) for more info).\n\n- `secret_key` (string) - The secret key used to communicate with Outscale. [Learn how to set this](/docs/builders/outscale#authentication)\n\n- `source_omi` (string) - The initial OMI used as a base for the newly created machine. `source_omi_filter` may be used instead to populate this automatically.\n\n### Optional:\n\n- `omi_description` (string) - The description to set for the resulting OMI(s).\n  By default this description is empty. This is a [template engine](/docs/templates/legacy_json_templates/engine),\n  see [Build template data](#build-template-data) for more information.\n\n- `omi_account_ids` (array of strings) - A list of account IDs that have access to launch the resulting OMI(s). By default no additional users other than the user creating the OMIS has permissions to launch it.\n\n- `product_codes` ([]string) - A list of product codes to associate with the OMI. By default no product codes are associated with the OMI.\n\n- `global_permission` (boolean) - This option is useful to make the OMI publicly accessible.\n\n- `omi_virtualization_type` (string) - The type of virtualization for the OMI you are building. This option must match the supported virtualization type of `source_omi`. Can be `paravirtual` or `hvm`.\n\n- `chroot_mounts` (array of array of strings) - This is a list of devices to\n  mount into the chroot environment. This configuration parameter requires\n  some additional documentation which is in the [Chroot\n  Mounts](#chroot-mounts) section. Please read that section for more\n  information on how to use this.\n\n- `command_wrapper` (string) - How to run shell commands. This defaults to\n  `{{.Command}}`. This may be useful to set if you want to set environmental\n  variables or perhaps run it with `sudo` or so on. This is a configuration\n  template where the `.Command` variable is replaced with the command to be\n  run. Defaults to `{{.Command}}`.\n\n- `copy_files` (array of strings) - Paths to files on the running Outscale\n  VM that will be copied into the chroot environment prior to\n  provisioning. Defaults to `/etc/resolv.conf` so that DNS lookups work. Pass\n  an empty list to skip copying `/etc/resolv.conf`. You may need to do this\n  if you're building an image that uses systemd.\n\n- `custom_endpoint_oapi` (string) - This option is useful if you use a cloud\n  provider whose API is compatible with Outscale OAPI. Specify another endpoint\n  like this `outscale.com/oapi/latest`.\n\n- `device_path` (string) - The path to the device where the root volume of\n  the source OMI will be attached. This defaults to \"\" (empty string), which\n  forces Packer to find an open device automatically.\n\n- `force_deregister` (boolean) - Force Packer to first deregister an existing\n  OMIS if one with the same name already exists. Default `false`.\n\n- `force_delete_snapshot` (boolean) - Force Packer to delete snapshots\n  associated with OMIs, which have been deregistered by `force_deregister`.\n  Default `false`.\n\n- `insecure_skip_tls_verify` (boolean) - This allows skipping TLS\n  verification of the OAPI endpoint. The default is `false`.\n\n- `from_scratch` (boolean) - Build a new volume instead of starting from an\n  existing OMI root volume snapshot. Default `false`. If `true`, `source_omi`\n  is no longer used and the following options become required:\n  `omi_virtualization_type`, `pre_mount_commands` and `root_volume_size`. The\n  below options are also required in this mode only:\n\n- `omi_block_device_mappings` (array of block device mappings) - Add one or more [block device mappings](https://docs.outscale.com/en/userguide/Defining-Block-Device-Mappings.html) to the OMI. These will be attached when booting a new VM from your OMI. To add a block device during the Packer build see `launch_block_device_mappings` below. Your options here may vary depending on the type of VM you use. The block device mappings allow for the following configuration:\n\n  - `delete_on_vm_deletion` (boolean) - Indicates whether the BSU volume is deleted on VM termination. Default `false`. **NOTE**: If this value is not explicitly set to `true` and volumes are not cleaned up by an alternative method, additional volumes will accumulate after every build.\n\n  - `device_name` (string) - The device name exposed to the VM (for example, `/dev/sdh` or `xvdh`). Required for every device in the block device mapping.\n\n  - `iops` (number) - The number of I/O operations per second (IOPS) that the volume supports. See the documentation on\n    [IOPs](https://docs.outscale.com/en/userguide/About-Volumes.html#_volume_types_and_iops)\n    for more information\n\n  - `no_device` (boolean) - Suppresses the specified device included in the\n    block device mapping of the OMI\n\n  - `snapshot_id` (string) - The ID of the snapshot\n\n  - `virtual_name` (string) - The virtual device name. See the documentation on [Block Device Mapping](https://docs.outscale.com/en/userguide/Defining-Block-Device-Mappings.html) for more information\n\n  - `volume_size` (number) - The size of the volume, in GiB. Required if not specifying a `snapshot_id`\n\n  - `volume_type` (string) - The volume type. `gp2` for General Purpose (SSD) volumes, `io1` for Provisioned IOPS (SSD) volumes, and `standard` for Magnetic volumes\n\n- `root_device_name` (string) - The root device name. For example, `xvda`.\n\n- `mount_path` (string) - The path where the volume will be mounted. This is\n  where the chroot environment will be. This defaults to\n  `/mnt/packer-amazon-chroot-volumes/{{.Device}}`. This is a configuration\n  template where the `.Device` variable is replaced with the name of the\n  device where the volume is attached.\n\n- `mount_partition` (string) - The partition number containing the /\n  partition. By default this is the first partition of the volume, (for\n  example, `xvdf1`) but you can designate the entire block device by setting\n  `\"mount_partition\": \"0\"` in your config, which will mount `xvdf` instead.\n\n- `mount_options` (array of strings) - Options to supply the `mount` command\n  when mounting devices. Each option will be prefixed with `-o` and supplied\n  to the `mount` command ran by Packer. Because this command is ran in a\n  shell, user discretion is advised. See [this manual page for the mount\n  command](https://linux.die.net/man/8/mount) for valid file\n  system specific options.\n\n- `nvme_device_path` (string) - When we call the mount command (by default\n  `mount -o device dir`), the string provided in `nvme_mount_path` will\n  replace `device` in that command. When this option is not set, `device` in\n  that command will be something like `/dev/sdf1`, mirroring the attached\n  device name. This assumption works for most instances but will fail with c5\n  and m5 instances. In order to use the chroot builder with c5 and m5\n  instances, you must manually set `nvme_device_path` and `device_path`.\n\n- `pre_mount_commands` (array of strings) - A series of commands to execute\n  after attaching the root volume and before mounting the chroot. This is not\n  required unless using `from_scratch`. If so, this should include any\n  partitioning and filesystem creation commands. The path to the device is\n  provided by `{{.Device}}`.\n\n- `post_mount_commands` (array of strings) - As `pre_mount_commands`, but the\n  commands are executed after mounting the root device and before the extra\n  mount and copy steps. The device and mount path are provided by\n  `{{.Device}}` and `{{.MountPath}}`.\n\n- `root_volume_size` (number) - The size of the root volume in GB for the\n  chroot environment and the resulting OMI. Default size is the snapshot size\n  of the `source_omi` unless `from_scratch` is `true`, in which case this\n  field must be defined.\n\n- `root_volume_type` (string) - The type of BSU volume for the chroot\n  environment and resulting OMI. The default value is the type of the\n  `source_omi`, unless `from_scratch` is `true`, in which case the default\n  value is `gp2`. You can only specify `io1` if building based on top of a\n  `source_omi` which is also `io1`.\n\n- `root_volume_tags` (object of key/value strings) - Tags to apply to the\n  volumes that are _launched_. This is a [template\n  engine](/docs/templates/legacy_json_templates/engine), see [Build template\n  data](#build-template-data) for more information.\n\n- `skip_region_validation` (boolean) - Set to true if you want to skip\n  validation of the region configuration option. Default `false`.\n\n- `snapshot_tags` (object of key/value strings) - Tags to apply to snapshot.\n  They will override OMI tags if already applied to snapshot. This is a\n  [template engine](/docs/templates/legacy_json_templates/engine), see [Build template\n  data](#build-template-data) for more information.\n\n- `source_omi_filter` (object) - Filters used to populate the `source_omi` field.\n\n  - `filters` (map of strings) - filters used to select a `source_omi`.\n  - `owners` (array of strings) - Filters the images by their owner. You may specify one or more Outscale account IDs, \"self\" (which will use the account whose credentials you are using to run Packer) or an Outscale owner alias. This option is required for security reasons.\n\n    Example:\n\n    ```json\n    {\n      \"source_omi_filter\": {\n        \"filters\": {\n          \"virtualization-type\": \"hvm\",\n          \"image-name\": \"ubuntu/images/*ubuntu-xenial-16.04-amd64-server-*\",\n          \"root-device-type\": \"ebs\"\n        },\n        \"owners\": [\"099720109477\"]\n      }\n    }\n    ```\n\n    This selects an Ubuntu 16.04 HVM BSU OMIS from Canonical. NOTE:\n    This will fail unless _exactly_ one OMIS is returned. In the above example,\n    `most_recent` will cause this to succeed by selecting the newest image.\n\n    You may set this in place of `source_omi` or in conjunction with it. If you\n    set this in conjunction with `source_omi`, the `source_omi` will be added\n    to the filter. The provided `source_omi` must meet all of the filtering\n    criteria provided in `source_omi_filter`; this pins the OMI returned by the\n    filter, but will cause Packer to fail if the `source_omi` does not exist.\n\n- `tags` (object of key/value strings) - Tags applied to the OMI. This is a\n  [template engine](/docs/templates/legacy_json_templates/engine), see [Build template\n  data](#build-template-data) for more information.\n\n## Basic Example\n\nHere is a basic example. It is completely valid except for the access keys:\n\n```json\n{\n  \"type\": \"outscale-chroot\",\n  \"access_key\": \"YOUR KEY HERE\",\n  \"secret_key\": \"YOUR SECRET KEY HERE\",\n  \"source_omi\": \"ami-3e158364\",\n  \"omi_name\": \"packer-outscale-chroot {{timestamp}}\"\n}\n```\n\n## Chroot Mounts\n\nThe `chroot_mounts` configuration can be used to mount specific devices within\nthe chroot. By default, the following additional mounts are added into the\nchroot by Packer:\n\n- `/proc` (proc)\n- `/sys` (sysfs)\n- `/dev` (bind to real `/dev`)\n- `/dev/pts` (devpts)\n- `/proc/sys/fs/binfmt_misc` (binfmt_misc)\n\nThese default mounts are usually good enough for anyone and are sane defaults.\nHowever, if you want to change or add the mount points, you may using the\n`chroot_mounts` configuration. Here is an example configuration which only\nmounts `/proc` and `/dev`:\n\n```json\n{\n  \"chroot_mounts\": [\n    [\"proc\", \"proc\", \"/proc\"],\n    [\"bind\", \"/dev\", \"/dev\"]\n  ]\n}\n```\n\n`chroot_mounts` is a list of a 3-tuples of strings. The three components of the\n3-tuple, in order, are:\n\n- The filesystem type. If this is \"bind\", then Packer will properly bind the\n  filesystem to another mount point.\n\n- The source device.\n\n- The mount directory.\n\n## Parallelism\n\nA quick note on parallelism: it is perfectly safe to run multiple _separate_\nPacker processes with the `outscale-chroot` builder on the same Outscale VM. In\nfact, this is recommended as a way to push the most performance out of your OMI\nbuilds.\n\nPacker properly obtains a process lock for the parallelism-sensitive parts of\nits internals such as finding an available device.\n\n## Gotchas\n\n### Unmounting the Filesystem\n\nOne of the difficulties with using the chroot builder is that your provisioning\nscripts must not leave any processes running or packer will be unable to\nunmount the filesystem.\n\nFor debian based distributions you can setup a\n[policy-rc.d](http://people.debian.org/~hmh/invokerc.d-policyrc.d-specification.txt)\nfile which will prevent packages installed by your provisioners from starting\nservices:\n\n```json\n({\n  \"type\": \"shell\",\n  \"inline\": [\n    \"echo '#!/bin/sh' > /usr/sbin/policy-rc.d\",\n    \"echo 'exit 101' >> /usr/sbin/policy-rc.d\",\n    \"chmod a+x /usr/sbin/policy-rc.d\"\n  ]\n},\n{\n  \"type\": \"shell\",\n  \"inline\": [\"rm -f /usr/sbin/policy-rc.d\"]\n})\n```\n\n### Ansible provisioner\n\nRunning `ansible` against `outscale-chroot` requires changing the Ansible connection\nto chroot and running Ansible as root/sudo.\n\n## Building From Scratch\n\nThis example demonstrates the essentials of building an image from scratch. A\n15G gp2 (SSD) device is created (overriding the default of standard/magnetic).\nThe device setup commands partition the device with one partition for use as an\nHVM image and format it ext4. This builder block should be followed by\nprovisioning commands to install the os and bootloader.\n\n```json\n{\n  \"type\": \"outscale-chroot\",\n  \"ami_name\": \"packer-from-scratch {{timestamp}}\",\n  \"from_scratch\": true,\n  \"ami_virtualization_type\": \"hvm\",\n  \"pre_mount_commands\": [\n    \"parted {{.Device}} mklabel msdos mkpart primary 1M 100% set 1 boot on print\",\n    \"mkfs.ext4 {{.Device}}1\"\n  ],\n  \"root_volume_size\": 15,\n  \"root_device_name\": \"xvdf\",\n  \"ami_block_device_mappings\": [\n    {\n      \"device_name\": \"xvdf\",\n      \"delete_on_termination\": true,\n      \"volume_type\": \"gp2\"\n    }\n  ]\n}\n```\n\n## Build template data\n\nIn configuration directives marked as a template engine above, the following\nvariables are available:\n\n- `BuildRegion` - The region (for example `eu-west-2`) where Packer is building the OMI.\n- `SourceOMI` - The source OMIS ID (for example `ami-a2412fcd`) used to build the OMI.\n- `SourceOMIName` - The source OMIS Name (for example `ubuntu-390`) used to build the OMI.\n- `SourceOMITags` - The source OMIS Tags, as a `map[string]string` object\n","sourceUrl":"https://github.com/outscale/packer-plugin-outscale/blob/main/docs/builders/outscale-chroot.mdx"},"pluginData":{"title":"Outscale","path":"outscale","repo":"outscale/packer-plugin-outscale","version":"latest","pluginTier":"verified","isHcpPackerReady":true,"files":[]},"fullPath":"/packer/plugins/builders/outscale/outscale-chroot","id":"sidebar-nav-item-56"}],"id":"sidebar-nav-item-51"},{"title":"Data Sources","routes":[{"title":"Outscale OMI","path":"datasources/outscale","remoteFile":{"filePath":"docs/datasources/omi.mdx"},"pluginData":{"title":"Outscale","path":"outscale","repo":"outscale/packer-plugin-outscale","version":"latest","pluginTier":"verified","isHcpPackerReady":true,"files":[]},"fullPath":"/packer/plugins/datasources/outscale","id":"sidebar-nav-item-58"}],"id":"sidebar-nav-item-57"}],"id":"sidebar-nav-item-50"},{"title":"Scaleway","routes":[{"title":"Builders","routes":[{"title":"Scaleway","path":"builders/scaleway","remoteFile":{"filePath":"docs/builders/scaleway.mdx"},"pluginData":{"title":"Scaleway","path":"scaleway","repo":"scaleway/packer-plugin-scaleway","pluginTier":"verified","version":"latest","files":[]},"fullPath":"/packer/plugins/builders/scaleway","id":"sidebar-nav-item-61"}],"id":"sidebar-nav-item-60"}],"id":"sidebar-nav-item-59"},{"title":"SSH Key","routes":[{"title":"Data Sources","routes":[{"title":"SSH Key","path":"datasources/sshkey","remoteFile":{"filePath":"docs/datasources/sshkey.mdx"},"pluginData":{"title":"SSH Key","path":"sshkey","repo":"ivoronin/packer-plugin-sshkey","pluginTier":"community","version":"latest","files":[]},"fullPath":"/packer/plugins/datasources/sshkey","id":"sidebar-nav-item-64"}],"id":"sidebar-nav-item-63"}],"id":"sidebar-nav-item-62"},{"title":"Tart","routes":[{"title":"Builders","routes":[{"title":"Tart","path":"builders/tart","remoteFile":{"filePath":"docs/builders/tart.mdx"},"pluginData":{"title":"Tart","path":"tart","repo":"cirruslabs/packer-plugin-tart","pluginTier":"community","version":"latest","files":[]},"fullPath":"/packer/plugins/builders/tart","id":"sidebar-nav-item-67"}],"id":"sidebar-nav-item-66"}],"id":"sidebar-nav-item-65"},{"title":"UCloud","routes":[{"title":"Builders","routes":[{"title":"UCloud","path":"builders/ucloud","remoteFile":{"filePath":"docs/builders/uhost.mdx"},"pluginData":{"title":"UCloud","path":"ucloud","repo":"ucloud/packer-plugin-ucloud","version":"latest","pluginTier":"community","files":[]},"fullPath":"/packer/plugins/builders/ucloud","id":"sidebar-nav-item-70"}],"id":"sidebar-nav-item-69"},{"title":"Post-Processors","routes":[{"title":"UCloud Import","path":"post-processors/ucloud","remoteFile":{"filePath":"docs/post-processors/import.mdx"},"pluginData":{"title":"UCloud","path":"ucloud","repo":"ucloud/packer-plugin-ucloud","version":"latest","pluginTier":"community","files":[]},"fullPath":"/packer/plugins/post-processors/ucloud","id":"sidebar-nav-item-72"}],"id":"sidebar-nav-item-71"}],"id":"sidebar-nav-item-68"},{"title":"UpCloud","routes":[{"title":"Builders","routes":[{"title":"upcloud","path":"builders/upcloud","remoteFile":{"filePath":"docs/builders/upcloud.mdx"},"pluginData":{"title":"UpCloud","path":"upcloud","repo":"UpCloudLtd/packer-plugin-upcloud","version":"latest","pluginTier":"verified","sourceBranch":"master","isHcpPackerReady":true,"files":[]},"fullPath":"/packer/plugins/builders/upcloud","id":"sidebar-nav-item-75"}],"id":"sidebar-nav-item-74"},{"title":"Post-Processors","routes":[{"title":"upcloud-import","path":"post-processors/upcloud","remoteFile":{"filePath":"docs/post-processors/upcloud-import.mdx"},"pluginData":{"title":"UpCloud","path":"upcloud","repo":"UpCloudLtd/packer-plugin-upcloud","version":"latest","pluginTier":"verified","sourceBranch":"master","isHcpPackerReady":true,"files":[]},"fullPath":"/packer/plugins/post-processors/upcloud","id":"sidebar-nav-item-77"}],"id":"sidebar-nav-item-76"}],"id":"sidebar-nav-item-73"},{"title":"Volcengine","routes":[{"title":"Builders","routes":[{"title":"Volcengine ECS","path":"builders/volcengine","remoteFile":{"filePath":"docs/builders/volcengine-ecs.mdx"},"pluginData":{"title":"Volcengine","path":"volcengine","repo":"volcengine/packer-plugin-volcengine","pluginTier":"community","version":"latest","files":[]},"fullPath":"/packer/plugins/builders/volcengine","id":"sidebar-nav-item-80"}],"id":"sidebar-nav-item-79"}],"id":"sidebar-nav-item-78"},{"title":"Vultr","routes":[{"title":"Builders","routes":[{"title":"Vultr","path":"builders/vultr","remoteFile":{"filePath":"docs/builders/vultr.mdx"},"pluginData":{"title":"Vultr","path":"vultr","repo":"vultr/packer-plugin-vultr","pluginTier":"community","version":"latest","files":[]},"fullPath":"/packer/plugins/builders/vultr","id":"sidebar-nav-item-83"}],"id":"sidebar-nav-item-82"}],"id":"sidebar-nav-item-81"},{"title":"Ksyun","routes":[{"title":"Builders","routes":[{"title":"Epc","path":"builders/ksyun/epc","remoteFile":{"filePath":"docs/builders/epc.mdx"},"pluginData":{"title":"Ksyun","path":"ksyun","repo":"kingsoftcloud/packer-plugin-ksyun","pluginTier":"community","version":"latest","files":[]},"fullPath":"/packer/plugins/builders/ksyun/epc","id":"sidebar-nav-item-86"},{"title":"Instance(KEC)","path":"builders/ksyun/kec","remoteFile":{"filePath":"docs/builders/kec.mdx"},"pluginData":{"title":"Ksyun","path":"ksyun","repo":"kingsoftcloud/packer-plugin-ksyun","pluginTier":"community","version":"latest","files":[]},"fullPath":"/packer/plugins/builders/ksyun/kec","id":"sidebar-nav-item-87"}],"id":"sidebar-nav-item-85"},{"title":"Data Sources","routes":[{"title":"Ksyun KMI","path":"datasources/ksyun","remoteFile":{"filePath":"docs/datasources/kmi.mdx"},"pluginData":{"title":"Ksyun","path":"ksyun","repo":"kingsoftcloud/packer-plugin-ksyun","pluginTier":"community","version":"latest","files":[]},"fullPath":"/packer/plugins/datasources/ksyun","id":"sidebar-nav-item-89"}],"id":"sidebar-nav-item-88"}],"id":"sidebar-nav-item-84"}],"title":"Plugins","visuallyHideTitle":true}],"mainWidth":"narrow"},"outlineItems":[{"title":"OMI Builder (chroot)","url":"#omi-builder-chroot","dataHeapTrack":"toc-list-item-index-0"},{"title":"How Does it Work?","url":"#how-does-it-work","dataHeapTrack":"toc-list-item-index-1"},{"title":"Configuration Reference","url":"#configuration-reference","dataHeapTrack":"toc-list-item-index-2"},{"title":"Basic Example","url":"#basic-example","dataHeapTrack":"toc-list-item-index-3"},{"title":"Chroot Mounts","url":"#chroot-mounts","dataHeapTrack":"toc-list-item-index-4"},{"title":"Parallelism","url":"#parallelism","dataHeapTrack":"toc-list-item-index-5"},{"title":"Gotchas","url":"#gotchas","dataHeapTrack":"toc-list-item-index-6"},{"title":"Building From Scratch","url":"#building-from-scratch","dataHeapTrack":"toc-list-item-index-7"},{"title":"Build template data","url":"#build-template-data","dataHeapTrack":"toc-list-item-index-8"}],"metadata":{"title":"Outscale chroot - Builders","description":"The amazon-chroot Packer builder is able to create Outscale OMIs backed by an BSU\nvolume as the root device. For more information on the difference between\ninstance storage and BSU-backed instances, storage for the root device section\nin the Outscale documentation.\n"},"mdxSource":{"compiledSource":"var c=Object.defineProperty,d=Object.defineProperties;var N=Object.getOwnPropertyDescriptors;var o=Object.getOwnPropertySymbols;var s=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable;var p=(a,n,i)=>n in a?c(a,n,{enumerable:!0,configurable:!0,writable:!0,value:i}):a[n]=i,e=(a,n)=>{for(var i in n||(n={}))s.call(n,i)&&p(a,i,n[i]);if(o)for(var i of o(n))l.call(n,i)&&p(a,i,n[i]);return a},r=(a,n)=>d(a,N(n));var m=(a,n)=>{var i={};for(var t in a)s.call(a,t)&&n.indexOf(t)<0&&(i[t]=a[t]);if(a!=null&&o)for(var t of o(a))n.indexOf(t)<0&&l.call(a,t)&&(i[t]=a[t]);return i};const makeShortcode=a=>function(i){return console.warn(\"Component \"+a+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",e({},i))},BadgesHeader=makeShortcode(\"BadgesHeader\"),PluginBadge=makeShortcode(\"PluginBadge\"),Badge=makeShortcode(\"Badge\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(i){var t=i,{components:a}=t,n=m(t,[\"components\"]);return mdx(MDXLayout,r(e(e({},layoutProps),n),{components:a,mdxType:\"MDXLayout\"}),mdx(BadgesHeader,{mdxType:\"BadgesHeader\"},mdx(PluginBadge,{type:\"verified\",mdxType:\"PluginBadge\"}),mdx(PluginBadge,{type:\"hcp_packer_ready\",mdxType:\"PluginBadge\"}),mdx(Badge,{href:\"https://github.com/outscale/packer-plugin-outscale/releases/tag/v1.1.3\",label:\"v1.1.3\",theme:\"light-gray\",mdxType:\"Badge\"})),mdx(\"h1\",e({},{className:\"g-type-display-2\",id:\"omi-builder-chroot\"}),mdx(\"a\",e({parentName:\"h1\"},{className:\"__permalink-h\",href:\"#omi-builder-chroot\",\"aria-label\":\"omi builder chroot permalink\"}),\"\\xBB\"),\"OMI Builder (chroot)\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Type: \",mdx(\"inlineCode\",{parentName:\"p\"},\"outscale-chroot\"),`\nArtifact BuilderId: `,mdx(\"inlineCode\",{parentName:\"p\"},\"oapi.outscale.chroot\")),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The \",mdx(\"inlineCode\",{parentName:\"p\"},\"outscale-chroot\"),` Packer builder is able to create Outscale Machine Images (OMIs) backed by an\nBSU volume as the root device. For more information on the difference between\ninstance storage and BSU-backed instances, see the `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://docs.outscale.com/en/userguide/Home.html\"}),`\"storage for the root\ndevice\" section in the Outscale\ndocumentation`),\".\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The difference between this builder and the \",mdx(\"inlineCode\",{parentName:\"p\"},\"outscale-bsu\"),` builder is that this\nbuilder is able to build an BSU-backed OMI without launching a new Outscale\nVM. This can dramatically speed up OMI builds for organizations who need\nthe extra fast build.`),mdx(\"div\",e({},{className:\"alert alert-warning g-type-body\"}),mdx(\"p\",e({parentName:\"div\"},{className:\"g-type-long-body\"}),\"\",mdx(\"strong\",{parentName:\"p\"},\"This is an advanced builder\"),` If you're just getting started with\nPacker, we recommend starting with the `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://packer.io/plugins/builders/outscale-bsu\"}),`outscale-bsu\nbuilder`),\", which is much easier to use.\")),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The builder does \",mdx(\"em\",{parentName:\"p\"},\"not\"),` manage OMIs. Once it creates an OMI and stores it in\nyour account, it is up to you to use, delete, etc., the OMI.`),mdx(\"h2\",e({},{className:\"g-type-display-3\",id:\"how-does-it-work\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#how-does-it-work\",\"aria-label\":\"how does it work permalink\"}),\"\\xBB\"),\"How Does it Work?\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`This builder works by creating a new BSU volume from an existing source OMI and\nattaching it into an already-running Outscale VM. Once attached, a\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"https://en.wikipedia.org/wiki/Chroot\"}),\"chroot\"),` is used to provision the system\nwithin that volume. After provisioning, the volume is detached, snapshotted,\nand an OMI is made.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Using this process, minutes can be shaved off the OMI creation process because\na new Outscale VM doesn't need to be launched.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`There are some restrictions, however. The host Outscale instance where the volume is\nattached to must be a similar system (generally the same OS version, kernel\nversions, etc.) as the OMI being built. Additionally, this process is much more\nexpensive because the Outscale VM must be kept running persistently in order\nto build OMIs, whereas the other OMI builders start VMs on-demand to\nbuild OMIs as needed.`),mdx(\"h2\",e({},{className:\"g-type-display-3\",id:\"configuration-reference\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#configuration-reference\",\"aria-label\":\"configuration reference permalink\"}),\"\\xBB\"),\"Configuration Reference\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`There are many configuration options available for the builder. They are\nsegmented below into two categories: required and optional parameters. Within\neach category, the available configuration keys are alphabetized.`),mdx(\"h3\",e({},{className:\"g-type-display-4\",id:\"required\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#required\",\"aria-label\":\"required permalink\"}),\"\\xBB\"),\"Required:\"),mdx(\"ul\",null,mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"access_key\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#access_key\",\"aria-label\":\"access_key permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"access_key\")),\" (string) - The access key used to communicate with OUTSCALE. \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://packer.io/plugins/builders/outscale#authentication\"}),\"Learn how to set this\"))),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"omi_name\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#omi_name\",\"aria-label\":\"omi_name permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"omi_name\")),\" (string) - The name of the resulting OMIS that will appear when managing OMIs in the Outscale console or via APIs. This must be unique. To help make this unique, use a function like \",mdx(\"inlineCode\",{parentName:\"p\"},\"timestamp\"),\" (see \",mdx(\"a\",e({parentName:\"p\"},{href:\"/packer/docs/templates/legacy_json_templates/engine\"}),\"template engine\"),\" for more info).\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"secret_key\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#secret_key\",\"aria-label\":\"secret_key permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"secret_key\")),\" (string) - The secret key used to communicate with Outscale. \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://packer.io/plugins/builders/outscale#authentication\"}),\"Learn how to set this\"))),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"source_omi\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#source_omi\",\"aria-label\":\"source_omi permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"source_omi\")),\" (string) - The initial OMI used as a base for the newly created machine. \",mdx(\"inlineCode\",{parentName:\"p\"},\"source_omi_filter\"),\" may be used instead to populate this automatically.\"))),mdx(\"h3\",e({},{className:\"g-type-display-4\",id:\"optional\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#optional\",\"aria-label\":\"optional permalink\"}),\"\\xBB\"),\"Optional:\"),mdx(\"ul\",null,mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"omi_description\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#omi_description\",\"aria-label\":\"omi_description permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"omi_description\")),` (string) - The description to set for the resulting OMI(s).\nBy default this description is empty. This is a `,mdx(\"a\",e({parentName:\"p\"},{href:\"/packer/docs/templates/legacy_json_templates/engine\"}),\"template engine\"),`,\nsee `,mdx(\"a\",e({parentName:\"p\"},{href:\"#build-template-data\"}),\"Build template data\"),\" for more information.\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"omi_account_ids\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#omi_account_ids\",\"aria-label\":\"omi_account_ids permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"omi_account_ids\")),\" (array of strings) - A list of account IDs that have access to launch the resulting OMI(s). By default no additional users other than the user creating the OMIS has permissions to launch it.\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"product_codes\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#product_codes\",\"aria-label\":\"product_codes permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"product_codes\")),\" ([]string) - A list of product codes to associate with the OMI. By default no product codes are associated with the OMI.\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"global_permission\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#global_permission\",\"aria-label\":\"global_permission permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"global_permission\")),\" (boolean) - This option is useful to make the OMI publicly accessible.\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"omi_virtualization_type\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#omi_virtualization_type\",\"aria-label\":\"omi_virtualization_type permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"omi_virtualization_type\")),\" (string) - The type of virtualization for the OMI you are building. This option must match the supported virtualization type of \",mdx(\"inlineCode\",{parentName:\"p\"},\"source_omi\"),\". Can be \",mdx(\"inlineCode\",{parentName:\"p\"},\"paravirtual\"),\" or \",mdx(\"inlineCode\",{parentName:\"p\"},\"hvm\"),\".\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"chroot_mounts\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#chroot_mounts\",\"aria-label\":\"chroot_mounts permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"chroot_mounts\")),` (array of array of strings) - This is a list of devices to\nmount into the chroot environment. This configuration parameter requires\nsome additional documentation which is in the `,mdx(\"a\",e({parentName:\"p\"},{href:\"#chroot-mounts\"}),`Chroot\nMounts`),` section. Please read that section for more\ninformation on how to use this.`)),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"command_wrapper\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#command_wrapper\",\"aria-label\":\"command_wrapper permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"command_wrapper\")),` (string) - How to run shell commands. This defaults to\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"{{.Command}}\"),`. This may be useful to set if you want to set environmental\nvariables or perhaps run it with `,mdx(\"inlineCode\",{parentName:\"p\"},\"sudo\"),` or so on. This is a configuration\ntemplate where the `,mdx(\"inlineCode\",{parentName:\"p\"},\".Command\"),` variable is replaced with the command to be\nrun. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},\"{{.Command}}\"),\".\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"copy_files\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#copy_files\",\"aria-label\":\"copy_files permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"copy_files\")),` (array of strings) - Paths to files on the running Outscale\nVM that will be copied into the chroot environment prior to\nprovisioning. Defaults to `,mdx(\"inlineCode\",{parentName:\"p\"},\"/etc/resolv.conf\"),` so that DNS lookups work. Pass\nan empty list to skip copying `,mdx(\"inlineCode\",{parentName:\"p\"},\"/etc/resolv.conf\"),`. You may need to do this\nif you're building an image that uses systemd.`)),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"custom_endpoint_oapi\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#custom_endpoint_oapi\",\"aria-label\":\"custom_endpoint_oapi permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"custom_endpoint_oapi\")),` (string) - This option is useful if you use a cloud\nprovider whose API is compatible with Outscale OAPI. Specify another endpoint\nlike this `,mdx(\"inlineCode\",{parentName:\"p\"},\"outscale.com/oapi/latest\"),\".\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"device_path\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#device_path\",\"aria-label\":\"device_path permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"device_path\")),` (string) - The path to the device where the root volume of\nthe source OMI will be attached. This defaults to \"\" (empty string), which\nforces Packer to find an open device automatically.`)),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"force_deregister\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#force_deregister\",\"aria-label\":\"force_deregister permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"force_deregister\")),` (boolean) - Force Packer to first deregister an existing\nOMIS if one with the same name already exists. Default `,mdx(\"inlineCode\",{parentName:\"p\"},\"false\"),\".\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"force_delete_snapshot\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#force_delete_snapshot\",\"aria-label\":\"force_delete_snapshot permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"force_delete_snapshot\")),` (boolean) - Force Packer to delete snapshots\nassociated with OMIs, which have been deregistered by `,mdx(\"inlineCode\",{parentName:\"p\"},\"force_deregister\"),`.\nDefault `,mdx(\"inlineCode\",{parentName:\"p\"},\"false\"),\".\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"insecure_skip_tls_verify\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#insecure_skip_tls_verify\",\"aria-label\":\"insecure_skip_tls_verify permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"insecure_skip_tls_verify\")),` (boolean) - This allows skipping TLS\nverification of the OAPI endpoint. The default is `,mdx(\"inlineCode\",{parentName:\"p\"},\"false\"),\".\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"from_scratch\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#from_scratch\",\"aria-label\":\"from_scratch permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"from_scratch\")),` (boolean) - Build a new volume instead of starting from an\nexisting OMI root volume snapshot. Default `,mdx(\"inlineCode\",{parentName:\"p\"},\"false\"),\". If \",mdx(\"inlineCode\",{parentName:\"p\"},\"true\"),\", \",mdx(\"inlineCode\",{parentName:\"p\"},\"source_omi\"),`\nis no longer used and the following options become required:\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"omi_virtualization_type\"),\", \",mdx(\"inlineCode\",{parentName:\"p\"},\"pre_mount_commands\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"root_volume_size\"),`. The\nbelow options are also required in this mode only:`)),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"omi_block_device_mappings\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#omi_block_device_mappings\",\"aria-label\":\"omi_block_device_mappings permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"omi_block_device_mappings\")),\" (array of block device mappings) - Add one or more \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://docs.outscale.com/en/userguide/Defining-Block-Device-Mappings.html\"}),\"block device mappings\"),\" to the OMI. These will be attached when booting a new VM from your OMI. To add a block device during the Packer build see \",mdx(\"inlineCode\",{parentName:\"p\"},\"launch_block_device_mappings\"),\" below. Your options here may vary depending on the type of VM you use. The block device mappings allow for the following configuration:\"),mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"delete_on_vm_deletion\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#delete_on_vm_deletion\",\"aria-label\":\"delete_on_vm_deletion permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"delete_on_vm_deletion\")),\" (boolean) - Indicates whether the BSU volume is deleted on VM termination. Default \",mdx(\"inlineCode\",{parentName:\"p\"},\"false\"),\". \",mdx(\"strong\",{parentName:\"p\"},\"NOTE\"),\": If this value is not explicitly set to \",mdx(\"inlineCode\",{parentName:\"p\"},\"true\"),\" and volumes are not cleaned up by an alternative method, additional volumes will accumulate after every build.\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"device_name\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#device_name\",\"aria-label\":\"device_name permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"device_name\")),\" (string) - The device name exposed to the VM (for example, \",mdx(\"inlineCode\",{parentName:\"p\"},\"/dev/sdh\"),\" or \",mdx(\"inlineCode\",{parentName:\"p\"},\"xvdh\"),\"). Required for every device in the block device mapping.\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"iops\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#iops\",\"aria-label\":\"iops permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"iops\")),` (number) - The number of I/O operations per second (IOPS) that the volume supports. See the documentation on\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"https://docs.outscale.com/en/userguide/About-Volumes.html#_volume_types_and_iops\"}),\"IOPs\"),`\nfor more information`)),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"no_device\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#no_device\",\"aria-label\":\"no_device permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"no_device\")),` (boolean) - Suppresses the specified device included in the\nblock device mapping of the OMI`)),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"snapshot_id\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#snapshot_id\",\"aria-label\":\"snapshot_id permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"snapshot_id\")),\" (string) - The ID of the snapshot\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"virtual_name\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#virtual_name\",\"aria-label\":\"virtual_name permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"virtual_name\")),\" (string) - The virtual device name. See the documentation on \",mdx(\"a\",e({parentName:\"p\"},{href:\"https://docs.outscale.com/en/userguide/Defining-Block-Device-Mappings.html\"}),\"Block Device Mapping\"),\" for more information\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"volume_size\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#volume_size\",\"aria-label\":\"volume_size permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"volume_size\")),\" (number) - The size of the volume, in GiB. Required if not specifying a \",mdx(\"inlineCode\",{parentName:\"p\"},\"snapshot_id\"))),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"volume_type\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#volume_type\",\"aria-label\":\"volume_type permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"volume_type\")),\" (string) - The volume type. \",mdx(\"inlineCode\",{parentName:\"p\"},\"gp2\"),\" for General Purpose (SSD) volumes, \",mdx(\"inlineCode\",{parentName:\"p\"},\"io1\"),\" for Provisioned IOPS (SSD) volumes, and \",mdx(\"inlineCode\",{parentName:\"p\"},\"standard\"),\" for Magnetic volumes\")))),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"root_device_name\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#root_device_name\",\"aria-label\":\"root_device_name permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"root_device_name\")),\" (string) - The root device name. For example, \",mdx(\"inlineCode\",{parentName:\"p\"},\"xvda\"),\".\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"mount_path\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#mount_path\",\"aria-label\":\"mount_path permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"mount_path\")),` (string) - The path where the volume will be mounted. This is\nwhere the chroot environment will be. This defaults to\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"/mnt/packer-amazon-chroot-volumes/{{.Device}}\"),`. This is a configuration\ntemplate where the `,mdx(\"inlineCode\",{parentName:\"p\"},\".Device\"),` variable is replaced with the name of the\ndevice where the volume is attached.`)),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"mount_partition\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#mount_partition\",\"aria-label\":\"mount_partition permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"mount_partition\")),` (string) - The partition number containing the /\npartition. By default this is the first partition of the volume, (for\nexample, `,mdx(\"inlineCode\",{parentName:\"p\"},\"xvdf1\"),`) but you can designate the entire block device by setting\n`,mdx(\"inlineCode\",{parentName:\"p\"},'\"mount_partition\": \"0\"'),\" in your config, which will mount \",mdx(\"inlineCode\",{parentName:\"p\"},\"xvdf\"),\" instead.\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"mount_options\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#mount_options\",\"aria-label\":\"mount_options permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"mount_options\")),\" (array of strings) - Options to supply the \",mdx(\"inlineCode\",{parentName:\"p\"},\"mount\"),` command\nwhen mounting devices. Each option will be prefixed with `,mdx(\"inlineCode\",{parentName:\"p\"},\"-o\"),` and supplied\nto the `,mdx(\"inlineCode\",{parentName:\"p\"},\"mount\"),` command ran by Packer. Because this command is ran in a\nshell, user discretion is advised. See `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://linux.die.net/man/8/mount\"}),`this manual page for the mount\ncommand`),` for valid file\nsystem specific options.`)),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"nvme_device_path\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#nvme_device_path\",\"aria-label\":\"nvme_device_path permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"nvme_device_path\")),` (string) - When we call the mount command (by default\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"mount -o device dir\"),\"), the string provided in \",mdx(\"inlineCode\",{parentName:\"p\"},\"nvme_mount_path\"),` will\nreplace `,mdx(\"inlineCode\",{parentName:\"p\"},\"device\"),\" in that command. When this option is not set, \",mdx(\"inlineCode\",{parentName:\"p\"},\"device\"),` in\nthat command will be something like `,mdx(\"inlineCode\",{parentName:\"p\"},\"/dev/sdf1\"),`, mirroring the attached\ndevice name. This assumption works for most instances but will fail with c5\nand m5 instances. In order to use the chroot builder with c5 and m5\ninstances, you must manually set `,mdx(\"inlineCode\",{parentName:\"p\"},\"nvme_device_path\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"device_path\"),\".\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"pre_mount_commands\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#pre_mount_commands\",\"aria-label\":\"pre_mount_commands permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"pre_mount_commands\")),` (array of strings) - A series of commands to execute\nafter attaching the root volume and before mounting the chroot. This is not\nrequired unless using `,mdx(\"inlineCode\",{parentName:\"p\"},\"from_scratch\"),`. If so, this should include any\npartitioning and filesystem creation commands. The path to the device is\nprovided by `,mdx(\"inlineCode\",{parentName:\"p\"},\"{{.Device}}\"),\".\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"post_mount_commands\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#post_mount_commands\",\"aria-label\":\"post_mount_commands permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"post_mount_commands\")),\" (array of strings) - As \",mdx(\"inlineCode\",{parentName:\"p\"},\"pre_mount_commands\"),`, but the\ncommands are executed after mounting the root device and before the extra\nmount and copy steps. The device and mount path are provided by\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"{{.Device}}\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"{{.MountPath}}\"),\".\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"root_volume_size\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#root_volume_size\",\"aria-label\":\"root_volume_size permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"root_volume_size\")),` (number) - The size of the root volume in GB for the\nchroot environment and the resulting OMI. Default size is the snapshot size\nof the `,mdx(\"inlineCode\",{parentName:\"p\"},\"source_omi\"),\" unless \",mdx(\"inlineCode\",{parentName:\"p\"},\"from_scratch\"),\" is \",mdx(\"inlineCode\",{parentName:\"p\"},\"true\"),`, in which case this\nfield must be defined.`)),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"root_volume_type\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#root_volume_type\",\"aria-label\":\"root_volume_type permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"root_volume_type\")),` (string) - The type of BSU volume for the chroot\nenvironment and resulting OMI. The default value is the type of the\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"source_omi\"),\", unless \",mdx(\"inlineCode\",{parentName:\"p\"},\"from_scratch\"),\" is \",mdx(\"inlineCode\",{parentName:\"p\"},\"true\"),`, in which case the default\nvalue is `,mdx(\"inlineCode\",{parentName:\"p\"},\"gp2\"),\". You can only specify \",mdx(\"inlineCode\",{parentName:\"p\"},\"io1\"),` if building based on top of a\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"source_omi\"),\" which is also \",mdx(\"inlineCode\",{parentName:\"p\"},\"io1\"),\".\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"root_volume_tags\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#root_volume_tags\",\"aria-label\":\"root_volume_tags permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"root_volume_tags\")),` (object of key/value strings) - Tags to apply to the\nvolumes that are `,mdx(\"em\",{parentName:\"p\"},\"launched\"),\". This is a \",mdx(\"a\",e({parentName:\"p\"},{href:\"/packer/docs/templates/legacy_json_templates/engine\"}),`template\nengine`),\", see \",mdx(\"a\",e({parentName:\"p\"},{href:\"#build-template-data\"}),`Build template\ndata`),\" for more information.\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"skip_region_validation\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#skip_region_validation\",\"aria-label\":\"skip_region_validation permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"skip_region_validation\")),` (boolean) - Set to true if you want to skip\nvalidation of the region configuration option. Default `,mdx(\"inlineCode\",{parentName:\"p\"},\"false\"),\".\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"snapshot_tags\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#snapshot_tags\",\"aria-label\":\"snapshot_tags permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"snapshot_tags\")),` (object of key/value strings) - Tags to apply to snapshot.\nThey will override OMI tags if already applied to snapshot. This is a\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"/packer/docs/templates/legacy_json_templates/engine\"}),\"template engine\"),\", see \",mdx(\"a\",e({parentName:\"p\"},{href:\"#build-template-data\"}),`Build template\ndata`),\" for more information.\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"source_omi_filter\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#source_omi_filter\",\"aria-label\":\"source_omi_filter permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"source_omi_filter\")),\" (object) - Filters used to populate the \",mdx(\"inlineCode\",{parentName:\"p\"},\"source_omi\"),\" field.\"),mdx(\"ul\",{parentName:\"li\"},mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"filters\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#filters\",\"aria-label\":\"filters permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"filters\")),\" (map of strings) - filters used to select a \",mdx(\"inlineCode\",{parentName:\"p\"},\"source_omi\"),\".\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"owners\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#owners\",\"aria-label\":\"owners permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"owners\")),' (array of strings) - Filters the images by their owner. You may specify one or more Outscale account IDs, \"self\" (which will use the account whose credentials you are using to run Packer) or an Outscale owner alias. This option is required for security reasons.'),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"Example:\"),mdx(\"pre\",e({parentName:\"li\"},{className:\"language-json\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-json\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"source_omi_filter\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"filters\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"virtualization-type\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"hvm\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"image-name\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"ubuntu/images/*ubuntu-xenial-16.04-amd64-server-*\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"root-device-type\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"ebs\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"owners\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"099720109477\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),`This selects an Ubuntu 16.04 HVM BSU OMIS from Canonical. NOTE:\nThis will fail unless `,mdx(\"em\",{parentName:\"p\"},\"exactly\"),` one OMIS is returned. In the above example,\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"most_recent\"),\" will cause this to succeed by selecting the newest image.\"),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"You may set this in place of \",mdx(\"inlineCode\",{parentName:\"p\"},\"source_omi\"),` or in conjunction with it. If you\nset this in conjunction with `,mdx(\"inlineCode\",{parentName:\"p\"},\"source_omi\"),\", the \",mdx(\"inlineCode\",{parentName:\"p\"},\"source_omi\"),` will be added\nto the filter. The provided `,mdx(\"inlineCode\",{parentName:\"p\"},\"source_omi\"),` must meet all of the filtering\ncriteria provided in `,mdx(\"inlineCode\",{parentName:\"p\"},\"source_omi_filter\"),`; this pins the OMI returned by the\nfilter, but will cause Packer to fail if the `,mdx(\"inlineCode\",{parentName:\"p\"},\"source_omi\"),\" does not exist.\")))),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"tags\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#tags\",\"aria-label\":\"tags permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"tags\")),` (object of key/value strings) - Tags applied to the OMI. This is a\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"/packer/docs/templates/legacy_json_templates/engine\"}),\"template engine\"),\", see \",mdx(\"a\",e({parentName:\"p\"},{href:\"#build-template-data\"}),`Build template\ndata`),\" for more information.\"))),mdx(\"h2\",e({},{className:\"g-type-display-3\",id:\"basic-example\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#basic-example\",\"aria-label\":\"basic example permalink\"}),\"\\xBB\"),\"Basic Example\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Here is a basic example. It is completely valid except for the access keys:\"),mdx(\"pre\",e({},{className:\"language-json\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-json\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"type\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"outscale-chroot\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"access_key\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"YOUR KEY HERE\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"secret_key\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"YOUR SECRET KEY HERE\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"source_omi\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"ami-3e158364\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"omi_name\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"packer-outscale-chroot {{timestamp}}\"'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"h2\",e({},{className:\"g-type-display-3\",id:\"chroot-mounts\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#chroot-mounts\",\"aria-label\":\"chroot mounts permalink\"}),\"\\xBB\"),\"Chroot Mounts\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The \",mdx(\"inlineCode\",{parentName:\"p\"},\"chroot_mounts\"),` configuration can be used to mount specific devices within\nthe chroot. By default, the following additional mounts are added into the\nchroot by Packer:`),mdx(\"ul\",null,mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"proc\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"a\",e({parentName:\"li\"},{href:\"#proc\",\"aria-label\":\"proc permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"/proc\")),\" (proc)\"),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"sys\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"a\",e({parentName:\"li\"},{href:\"#sys\",\"aria-label\":\"sys permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"/sys\")),\" (sysfs)\"),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"dev\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"a\",e({parentName:\"li\"},{href:\"#dev\",\"aria-label\":\"dev permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"/dev\")),\" (bind to real \",mdx(\"inlineCode\",{parentName:\"li\"},\"/dev\"),\")\"),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"dev-pts\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"a\",e({parentName:\"li\"},{href:\"#dev-pts\",\"aria-label\":\"dev pts permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"/dev/pts\")),\" (devpts)\"),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"proc-sys-fs-binfmt_misc\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"a\",e({parentName:\"li\"},{href:\"#proc-sys-fs-binfmt_misc\",\"aria-label\":\"proc sys fs binfmt_misc permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"/proc/sys/fs/binfmt_misc\")),\" (binfmt_misc)\")),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`These default mounts are usually good enough for anyone and are sane defaults.\nHowever, if you want to change or add the mount points, you may using the\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"chroot_mounts\"),` configuration. Here is an example configuration which only\nmounts `,mdx(\"inlineCode\",{parentName:\"p\"},\"/proc\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"/dev\"),\":\"),mdx(\"pre\",e({},{className:\"language-json\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-json\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"chroot_mounts\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"proc\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"proc\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"/proc\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"bind\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"/dev\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"/dev\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),mdx(\"inlineCode\",{parentName:\"p\"},\"chroot_mounts\"),` is a list of a 3-tuples of strings. The three components of the\n3-tuple, in order, are:`),mdx(\"ul\",null,mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),`The filesystem type. If this is \"bind\", then Packer will properly bind the\nfilesystem to another mount point.`)),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"The source device.\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),\"The mount directory.\"))),mdx(\"h2\",e({},{className:\"g-type-display-3\",id:\"parallelism\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#parallelism\",\"aria-label\":\"parallelism permalink\"}),\"\\xBB\"),\"Parallelism\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"A quick note on parallelism: it is perfectly safe to run multiple \",mdx(\"em\",{parentName:\"p\"},\"separate\"),`\nPacker processes with the `,mdx(\"inlineCode\",{parentName:\"p\"},\"outscale-chroot\"),` builder on the same Outscale VM. In\nfact, this is recommended as a way to push the most performance out of your OMI\nbuilds.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Packer properly obtains a process lock for the parallelism-sensitive parts of\nits internals such as finding an available device.`),mdx(\"h2\",e({},{className:\"g-type-display-3\",id:\"gotchas\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#gotchas\",\"aria-label\":\"gotchas permalink\"}),\"\\xBB\"),\"Gotchas\"),mdx(\"h3\",e({},{className:\"g-type-display-4\",id:\"unmounting-the-filesystem\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#unmounting-the-filesystem\",\"aria-label\":\"unmounting the filesystem permalink\"}),\"\\xBB\"),\"Unmounting the Filesystem\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`One of the difficulties with using the chroot builder is that your provisioning\nscripts must not leave any processes running or packer will be unable to\nunmount the filesystem.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`For debian based distributions you can setup a\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"http://people.debian.org/~hmh/invokerc.d-policyrc.d-specification.txt\"}),\"policy-rc.d\"),`\nfile which will prevent packages installed by your provisioners from starting\nservices:`),mdx(\"pre\",e({},{className:\"language-json\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-json\"}),\"(\",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"type\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"shell\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"inline\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),`\"echo '#!/bin/sh' > /usr/sbin/policy-rc.d\"`),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),`\"echo 'exit 101' >> /usr/sbin/policy-rc.d\"`),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"chmod a+x /usr/sbin/policy-rc.d\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"type\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"shell\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"inline\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"rm -f /usr/sbin/policy-rc.d\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),\")\",`\n`)),mdx(\"h3\",e({},{className:\"g-type-display-4\",id:\"ansible-provisioner\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#ansible-provisioner\",\"aria-label\":\"ansible provisioner permalink\"}),\"\\xBB\"),\"Ansible provisioner\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Running \",mdx(\"inlineCode\",{parentName:\"p\"},\"ansible\"),\" against \",mdx(\"inlineCode\",{parentName:\"p\"},\"outscale-chroot\"),` requires changing the Ansible connection\nto chroot and running Ansible as root/sudo.`),mdx(\"h2\",e({},{className:\"g-type-display-3\",id:\"building-from-scratch\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#building-from-scratch\",\"aria-label\":\"building from scratch permalink\"}),\"\\xBB\"),\"Building From Scratch\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`This example demonstrates the essentials of building an image from scratch. A\n15G gp2 (SSD) device is created (overriding the default of standard/magnetic).\nThe device setup commands partition the device with one partition for use as an\nHVM image and format it ext4. This builder block should be followed by\nprovisioning commands to install the os and bootloader.`),mdx(\"pre\",e({},{className:\"language-json\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-json\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"type\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"outscale-chroot\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"ami_name\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"packer-from-scratch {{timestamp}}\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"from_scratch\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token boolean\"}),\"true\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"ami_virtualization_type\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"hvm\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"pre_mount_commands\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"parted {{.Device}} mklabel msdos mkpart primary 1M 100% set 1 boot on print\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"mkfs.ext4 {{.Device}}1\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"root_volume_size\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token number\"}),\"15\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"root_device_name\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"xvdf\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"ami_block_device_mappings\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"device_name\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"xvdf\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"delete_on_termination\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token boolean\"}),\"true\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\",\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"volume_type\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token operator\"}),\":\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"gp2\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"h2\",e({},{className:\"g-type-display-3\",id:\"build-template-data\"}),mdx(\"a\",e({parentName:\"h2\"},{className:\"__permalink-h\",href:\"#build-template-data\",\"aria-label\":\"build template data permalink\"}),\"\\xBB\"),\"Build template data\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`In configuration directives marked as a template engine above, the following\nvariables are available:`),mdx(\"ul\",null,mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"buildregion\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"a\",e({parentName:\"li\"},{href:\"#buildregion\",\"aria-label\":\"buildregion permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"BuildRegion\")),\" - The region (for example \",mdx(\"inlineCode\",{parentName:\"li\"},\"eu-west-2\"),\") where Packer is building the OMI.\"),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"sourceomi\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"a\",e({parentName:\"li\"},{href:\"#sourceomi\",\"aria-label\":\"sourceomi permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"SourceOMI\")),\" - The source OMIS ID (for example \",mdx(\"inlineCode\",{parentName:\"li\"},\"ami-a2412fcd\"),\") used to build the OMI.\"),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"sourceominame\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"a\",e({parentName:\"li\"},{href:\"#sourceominame\",\"aria-label\":\"sourceominame permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"SourceOMIName\")),\" - The source OMIS Name (for example \",mdx(\"inlineCode\",{parentName:\"li\"},\"ubuntu-390\"),\") used to build the OMI.\"),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"sourceomitags\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"a\",e({parentName:\"li\"},{href:\"#sourceomitags\",\"aria-label\":\"sourceomitags permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"SourceOMITags\")),\" - The source OMIS Tags, as a \",mdx(\"inlineCode\",{parentName:\"li\"},\"map[string]string\"),\" object\")))}MDXContent.isMDXComponent=!0;\n","scope":{}},"product":{"name":"Packer","slug":"packer","algoliaConfig":{"indexName":"product_PACKER","searchOnlyApiKey":"4e1ea7f4bf4335ac43d9f28463e42148"},"analyticsConfig":{"includedDomains":"packer.io www.packer.io","segmentWriteKey":"AjXdfmTTk1I9q9dfyePuDFHBrz1tCO3l"},"datoToken":"88b4984480dad56295a8aadae6caad","metadata":{"title":"Packer by HashiCorp","description":"Packer helps you create golden images for multiple platforms from a single source configuration.","image":"https://www.packer.io/packer-public/img/og-image.png","icon":[{"href":"/packer-public/_favicon.ico"}]},"alertBannerActive":true,"alertBanner":{"tag":"HashiConf","url":"https://hashiconf.com/2023?utm_source=direct&utm_medium=banner&utm_campaign=23Q3_HASHICONFGLOBAL_EVENT&utm_content=&utm_offer=event","text":"Our community conference is taking place in San Francisco and online October 10-12.","linkText":"Register now","expirationDate":""},"version":"1.7.10","basePaths":["docs","guides","intro","downloads"],"rootDocsPaths":[{"iconName":"docs","name":"Documentation","path":"docs"},{"iconName":"guide","name":"Guides","path":"guides"},{"iconName":"plug","name":"Plugins","path":"plugins"}],"integrationsConfig":{"description":"A curated collection of official, partner, and community Packer Integrations."},"currentRootDocsPath":{"iconName":"plug","name":"Plugins","path":"plugins"}}},"__N_SSG":true}