{"pageProps":{"layoutProps":{"breadcrumbLinks":[{"title":"Developer","url":"/"},{"title":"Packer","url":"/packer"},{"title":"Plugins","url":"/packer/plugins"},{"title":"Builders"},{"title":"Libvirt","key":"thomasklein94/packer-plugin-libvirt"}],"githubFileUrl":"https://github.com/thomasklein94/packer-plugin-libvirt/blob/main/docs/builders/libvirt.mdx","sidebarNavDataLevels":[{"levelButtonProps":{"levelDownButtonText":"Packer Home"},"menuItems":[{"leadingIconName":"home","title":"HashiCorp Developer","href":"/"},{"leadingIconName":"guide","title":"Tutorials","href":"/tutorials"},{"divider":true},{"heading":"Products"},{"leadingIconName":"hcp","title":"HashiCorp Cloud Platform","href":"/hcp"},{"leadingIconName":"terraform","title":"Terraform","href":"/terraform"},{"leadingIconName":"packer","title":"Packer","href":"/packer"},{"leadingIconName":"consul","title":"Consul","href":"/consul"},{"leadingIconName":"vault","title":"Vault","href":"/vault"},{"leadingIconName":"boundary","title":"Boundary","href":"/boundary"},{"leadingIconName":"nomad","title":"Nomad","href":"/nomad"},{"leadingIconName":"waypoint","title":"Waypoint","href":"/waypoint"},{"leadingIconName":"vagrant","title":"Vagrant","href":"/vagrant"}],"showFilterInput":false,"title":"Main Menu"},{"levelButtonProps":{"levelUpButtonText":"Main Menu","levelDownButtonText":"Previous"},"menuItems":[{"title":"Packer","fullPath":"/packer","theme":"packer"},{"title":"Install","fullPath":"/packer/downloads"},{"title":"Tutorials","fullPath":"/packer/tutorials"},{"title":"Documentation","fullPath":"/packer/docs"},{"title":"Guides","fullPath":"/packer/guides"},{"title":"Plugins","fullPath":"/packer/plugins"},{"title":"Integrations","fullPath":"/packer/integrations"}],"showFilterInput":false,"title":"Packer","visuallyHideTitle":true},{"backToLinkProps":{"text":"Packer Home","href":"/packer"},"levelButtonProps":{"levelUpButtonText":"Packer Home"},"menuItems":[{"title":"Plugins","fullPath":"/packer/plugins","theme":"packer"},{"divider":true,"id":"sidebar-nav-item-2"},{"title":"Anka","routes":[{"title":"Post-Processors","routes":[{"title":"Anka Registry Push","path":"post-processors/anka","remoteFile":{"filePath":"docs/post-processors/anka-registry-push.mdx"},"pluginData":{"title":"Anka","path":"anka","repo":"veertuinc/packer-plugin-veertu-anka","pluginTier":"community","sourceBranch":"master","version":"latest","files":[]},"fullPath":"/packer/plugins/post-processors/anka","id":"sidebar-nav-item-5"}],"id":"sidebar-nav-item-4"},{"title":"Builders","routes":[{"title":"VM Clone","path":"builders/anka/vm-clone","remoteFile":{"filePath":"docs/builders/vm-clone.mdx"},"pluginData":{"title":"Anka","path":"anka","repo":"veertuinc/packer-plugin-veertu-anka","pluginTier":"community","sourceBranch":"master","version":"latest","files":[]},"fullPath":"/packer/plugins/builders/anka/vm-clone","id":"sidebar-nav-item-7"},{"title":"VM Create","path":"builders/anka/vm-create","remoteFile":{"filePath":"docs/builders/vm-create.mdx"},"pluginData":{"title":"Anka","path":"anka","repo":"veertuinc/packer-plugin-veertu-anka","pluginTier":"community","sourceBranch":"master","version":"latest","files":[]},"fullPath":"/packer/plugins/builders/anka/vm-create","id":"sidebar-nav-item-8"}],"id":"sidebar-nav-item-6"}],"id":"sidebar-nav-item-3"},{"title":"DigitalOcean","routes":[{"title":"Builders","routes":[{"title":"digitalocean","path":"builders/digitalocean","remoteFile":{"filePath":"docs/builders/digitalocean.mdx"},"pluginData":{"title":"DigitalOcean","path":"digitalocean","repo":"digitalocean/packer-plugin-digitalocean","pluginTier":"verified","version":"latest","isHcpPackerReady":true,"files":[]},"fullPath":"/packer/plugins/builders/digitalocean","id":"sidebar-nav-item-11"}],"id":"sidebar-nav-item-10"},{"title":"Data Sources","routes":[{"title":"digitalocean-image","path":"datasources/digitalocean","remoteFile":{"filePath":"docs/datasources/digitalocen-image.mdx"},"pluginData":{"title":"DigitalOcean","path":"digitalocean","repo":"digitalocean/packer-plugin-digitalocean","pluginTier":"verified","version":"latest","isHcpPackerReady":true,"files":[]},"fullPath":"/packer/plugins/datasources/digitalocean","id":"sidebar-nav-item-13"}],"id":"sidebar-nav-item-12"},{"title":"Post-Processors","routes":[{"title":"digitalocean-import","path":"post-processors/digitalocean","remoteFile":{"filePath":"docs/post-processors/digitalocean-import.mdx"},"pluginData":{"title":"DigitalOcean","path":"digitalocean","repo":"digitalocean/packer-plugin-digitalocean","pluginTier":"verified","version":"latest","isHcpPackerReady":true,"files":[]},"fullPath":"/packer/plugins/post-processors/digitalocean","id":"sidebar-nav-item-15"}],"id":"sidebar-nav-item-14"}],"id":"sidebar-nav-item-9"},{"title":"External","routes":[{"title":"Data Sources","routes":[{"title":"Overview","path":"datasources/external","remoteFile":{"filePath":"docs/datasources/index.mdx"},"pluginData":{"title":"External","path":"external","repo":"joomcode/packer-plugin-external","version":"latest","sourceBranch":"main","pluginTier":"community","files":[]},"fullPath":"/packer/plugins/datasources/external","id":"sidebar-nav-item-18"},{"title":"External","path":"datasources/external/external","remoteFile":{"filePath":"docs/datasources/external.mdx"},"pluginData":{"title":"External","path":"external","repo":"joomcode/packer-plugin-external","version":"latest","sourceBranch":"main","pluginTier":"community","files":[]},"fullPath":"/packer/plugins/datasources/external/external","id":"sidebar-nav-item-19"},{"title":"External Raw","path":"datasources/external/raw","remoteFile":{"filePath":"docs/datasources/raw.mdx"},"pluginData":{"title":"External","path":"external","repo":"joomcode/packer-plugin-external","version":"latest","sourceBranch":"main","pluginTier":"community","files":[]},"fullPath":"/packer/plugins/datasources/external/raw","id":"sidebar-nav-item-20"}],"id":"sidebar-nav-item-17"}],"id":"sidebar-nav-item-16"},{"title":"Git","routes":[{"title":"Data Sources","routes":[{"title":"Overview","path":"datasources/git","remoteFile":{"filePath":"docs/datasources/index.mdx"},"pluginData":{"title":"Git","path":"git","repo":"ethanmdavidson/packer-plugin-git","version":"latest","sourceBranch":"main","pluginTier":"community","files":[]},"fullPath":"/packer/plugins/datasources/git","id":"sidebar-nav-item-23"},{"title":"Commit","path":"datasources/git/commit","remoteFile":{"filePath":"docs/datasources/commit.mdx"},"pluginData":{"title":"Git","path":"git","repo":"ethanmdavidson/packer-plugin-git","version":"latest","sourceBranch":"main","pluginTier":"community","files":[]},"fullPath":"/packer/plugins/datasources/git/commit","id":"sidebar-nav-item-24"},{"title":"Repository","path":"datasources/git/repository","remoteFile":{"filePath":"docs/datasources/repository.mdx"},"pluginData":{"title":"Git","path":"git","repo":"ethanmdavidson/packer-plugin-git","version":"latest","sourceBranch":"main","pluginTier":"community","files":[]},"fullPath":"/packer/plugins/datasources/git/repository","id":"sidebar-nav-item-25"},{"title":"Tree","path":"datasources/git/tree","remoteFile":{"filePath":"docs/datasources/tree.mdx"},"pluginData":{"title":"Git","path":"git","repo":"ethanmdavidson/packer-plugin-git","version":"latest","sourceBranch":"main","pluginTier":"community","files":[]},"fullPath":"/packer/plugins/datasources/git/tree","id":"sidebar-nav-item-26"}],"id":"sidebar-nav-item-22"}],"id":"sidebar-nav-item-21"},{"title":"Gridscale","routes":[{"title":"Builders","routes":[{"title":"gridscale","path":"builders/gridscale","remoteFile":{"filePath":"docs/builders/gridscale.mdx"},"pluginData":{"title":"Gridscale","path":"gridscale","repo":"gridscale/packer-plugin-gridscale","version":"latest","pluginTier":"verified","isHcpPackerReady":false,"files":[]},"fullPath":"/packer/plugins/builders/gridscale","id":"sidebar-nav-item-29"}],"id":"sidebar-nav-item-28"}],"id":"sidebar-nav-item-27"},{"title":"IPSW","routes":[{"title":"Data Sources","routes":[{"title":"IPSW","path":"datasources/ipsw","remoteFile":{"filePath":"docs/datasources/ipsw.mdx"},"pluginData":{"title":"IPSW","path":"ipsw","repo":"torarnv/packer-plugin-ipsw","version":"latest","sourceBranch":"main","pluginTier":"community","files":[]},"fullPath":"/packer/plugins/datasources/ipsw","id":"sidebar-nav-item-32"}],"id":"sidebar-nav-item-31"}],"id":"sidebar-nav-item-30"},{"title":"Kamatera","routes":[{"title":"Builders","routes":[{"title":"Kamatera","path":"builders/kamatera","remoteFile":{"filePath":"docs/builders/kamatera.mdx"},"pluginData":{"title":"Kamatera","path":"kamatera","repo":"kamatera/packer-plugin-kamatera","pluginTier":"community","version":"latest","files":[]},"fullPath":"/packer/plugins/builders/kamatera","id":"sidebar-nav-item-35"}],"id":"sidebar-nav-item-34"}],"id":"sidebar-nav-item-33"},{"title":"Linode","routes":[{"title":"Builders","routes":[{"title":"Linode","path":"builders/linode","remoteFile":{"filePath":"docs/builders/linode.mdx"},"pluginData":{"title":"Linode","path":"linode","repo":"linode/packer-plugin-linode","pluginTier":"verified","version":"latest","isHcpPackerReady":true,"files":[]},"fullPath":"/packer/plugins/builders/linode","id":"sidebar-nav-item-38"}],"id":"sidebar-nav-item-37"}],"id":"sidebar-nav-item-36"},{"title":"Libvirt","routes":[{"title":"Builders","routes":[{"title":"Libvirt","path":"builders/libvirt","remoteFile":{"filePath":"docs/builders/libvirt.mdx","fileString":"---\ndescription: >\n  The Libvirt Builder is able to create Libvirt volumes on your libvirt hypervisor\n  by copying an image from a http source, by using already existing volumes as a backing store,\n  or creating an empty one and starting a libvirt domain with these volumes attached.\npage_title: Libvirt - Builders\nnav_title: Libvirt\n---\n\n# Libvirt\n\nType: `libvirt`\nArtifact BuilderId: `thomasklein94.libvirt`\n\nThe Libvirt Builder is able to create Libvirt volumes on your libvirt hypervisor\nby copying an image from a http source, by using already existing volumes as a backing store,\nor creating an empty one and starting a libvirt domain with these volumes attached.\n\nLibvirt builder also supports cloudinit images during build.\n\nBefore looking at the configuration options and examples, you might also want to check out and\nfamiliarize yourself with [libvirt's domain specification](https://libvirt.org/formatdomain.html)\nand [libvirt's storage pool and volume concepts](https://libvirt.org/formatstorage.html).\n\n### Installation\n\nTo use the pre-built release of Packer Plugin Libvirt, you can add the following snippet to your Packer project:\n\n```hcl\npacker {\n  required_plugins {\n    libvirt = {\n      version = \">= 0.5.0\"\n      source  = \"github.com/thomasklein94/libvirt\"\n    }\n  }\n}\n```\n\n<!-- Builder Configuration Fields -->\n\n### Required\n\n<!-- Code generated from the comments of the Config struct in builder/libvirt/config.go; DO NOT EDIT MANUALLY -->\n\n- `libvirt_uri` (string) - Libvirt URI\n\n<!-- End of code generated from the comments of the Config struct in builder/libvirt/config.go; -->\n\n\n### Optional\n\n<!-- Code generated from the comments of the Config struct in builder/libvirt/config.go; DO NOT EDIT MANUALLY -->\n\n- `communicator` (communicator.Config) - Communicator configuration\n  See [Packer's documentation](https://www.packer.io/docs/communicators) for more.\n\n- `domain_name` (string) - The libvirt name of the domain (virtual machine) running your build\n  If not specified, a random name with the prefix `packer-` will be used\n\n- `memory` (int) - The amount of memory to use when building the VM\n  in megabytes. This defaults to 512 megabytes.\n\n- `vcpu` (int) - The number of cpus to use when building the VM.\n  The default is `1` CPU.\n\n- `cpu_mode` (string) - Set CPU mode, you might want to set it to \"host-passthrough\".\n  See [libvirt documentation](https://libvirt.org/formatdomain.html#cpu-model-and-topology) for more information.\n  If not specified, let libvirt decide.\n\n- `network_interface` ([]network.NetworkInterface) - Network interface attachments. See [Network](#network) for more.\n\n- `communicator_interface` (string) - The alias of the network interface used for the SSH/WinRM connections\n  See [Communicators and network interfaces](#communicators-and-network-interfaces)\n\n- `volume` ([]volume.Volume) - See [Volumes](#volumes)\n\n- `artifact_volume_alias` (string) - The alias of the drive designated to be the artifact. To learn more,\n  see [Volumes](#volumes)\n\n- `boot_devices` ([]string) - Device(s) from which to boot, defaults to hard drive (first volume)\n  Available boot devices are: `hd`, `network`, `cdrom`\n\n- `graphics` ([]DomainGraphic) - See [Graphics and video, headless domains](#graphics-and-video-headless-domains).\n\n- `network_address_source` (string) - The alias of the network interface designated as the communicator interface.\n  Can be either `agent`, `lease` or `arp`. Default value is `agent`.\n  To learn more, see [Communicators and network interfaces](#communicators-and-network-interfaces)\n  in the builder documentation.\n\n- `shutdown_mode` (string) - Packer will instruct libvirt to use this mode to properly shut down the virtual machine\n  before it attempts to destroy it. Available modes are: `acpi`, `guest`, `initctl`, `signal` and `paravirt`.\n  If not set, libvirt will choose the method of shutdown it considers the best.\n\n- `shutdown_timeout` (duration string | ex: \"1h5m2s\") - After succesfull provisioning, Packer will wait this long for the virtual machine to gracefully\n  stop before it destroys it. If not specified, Packer will wait for 5 minutes.\n\n- `domain_type` (string) - [Expert] Domain type. It specifies the hypervisor used for running the domain.\n  The allowed values are driver specific, but include \"xen\", \"kvm\", \"hvf\", \"qemu\" and \"lxc\".\n  Default is kvm.\n  If unsure, leave it empty.\n\n- `arch` (string) - [Expert] Domain architecture. Default is x86_64\n\n- `chipset` (string) - Libvirt Machine Type\n  Value for domain XML's machine type. If unsure, leave it empty\n\n- `loader_path` (string) - [Expert] Refers to a firmware blob, which is specified by absolute path, used to assist the domain creation process.\n  If unsure, leave it empty.\n\n- `loader_type` (string) - [Expert] Accepts values rom and pflash. It tells the hypervisor where in the guest memory the loader(rom) should be mapped.\n  If unsure, leave it empty.\n\n- `secure_boot` (bool) - [Expert] Some firmwares may implement the Secure boot feature.\n  This attribute can be used to tell the hypervisor that the firmware is capable of Secure Boot feature.\n  It cannot be used to enable or disable the feature itself in the firmware.\n  If unsure, leave it empty.\n\n- `nvram_path` (string) - [Expert] Some UEFI firmwares may want to use a non-volatile memory to store some variables.\n  In the host, this is represented as a file and the absolute path to the file is stored in this element.\n  If unsure, leave it empty.`\n\n- `nvram_template` (string) - [Expert] If the domain is an UEFI domain, libvirt copies a so called master NVRAM store file defined in qemu.conf.\n  If needed, the template attribute can be used to per domain override map of master NVRAM stores from the config file.\n  If unsure, leave it empty.\n\n<!-- End of code generated from the comments of the Config struct in builder/libvirt/config.go; -->\n\n\n### Aliases\nLibvirt offers a way to add one alias per device. Libvirt builder uses this to find out which volume should be the\nartifact in case there are multiple volume configurations present. Finding the communicator interface is similar in fashion.\nThere are reasonable defaults built into the builder to ease onboarding but they will produce a warning and it's \nrecommended to use aliases.\n\nThe identifier must consist only of the following characters: `[a-zA-Z0-9_-]`. Libvirt also requires the identifier \nto start with `ua-`, but libvirt builder will take care of that for you and prepend every alias with `ua-` before \napplying the domain definition to libvirt.\n\n### Graceful shutdown\nTo ensure all changes were synced to the artifact volume,\nafter a **successful provisioning**, the Libvirt plugin will try to gracefully terminate the builder instance\nby sending a shutdown command to libvirt and wait up to `shutdown_timeout` before forcefully destroys the domain.\nLibvirt supports multiple way to shut down a domain, which can be controlled by the `shutdown_mode` attribute.\n\n### Volumes\n\nLibvirt uses volumes to attach as disks, to boot from and to persist data to. Libvirt Builder treats volumes as sources\nand possible artifacts. Arbitrary number of volumes can be attached to a builder domain with specifying a `volume { }` \nblock for each. The volume which will be the artifact of the build has to be marked with `alias = \"artifact\"`.\n\nA volume defined with a source MUST NOT EXISTS BEFORE the build and WILL BE DESTROYED at the end of the build.\nThe only exception is when the volume marked as an artifact in which case a successful build prevents libvirt builder from \ndeleting the volume.\n\nIf a volume does not have a source defined and does not marked as an artifact,\nthe volume must exists before the build, and will not be destroyed at the end of the build.\n\n<!-- Code generated from the comments of the Volume struct in builder/libvirt/volume/volume.go; DO NOT EDIT MANUALLY -->\n\n- `pool` (string) - Specifies the name of the storage pool (managed by libvirt) where the disk resides. If not specified\n  the pool named `default` will be used\n\n- `name` (string) - Providing a name for the volume which is unique to the pool. (For a disk pool, the name must be\n  combination of the source device path device and next partition number to be\n  created. For example, if the source device path is /dev/sdb and there are no\n  partitions on the disk, then the name must be sdb1 with the next name being\n  sdb2 and so on.)\n  If not provided, a name will be generated in a format of `<domain_name>-<postfix>` where\n  postfix will be either the alias or a random id.\n  For cloudinit, the generated name will be `<domain_name>-cloudinit`\n\n- `source` (\\*VolumeSource) - Provides information about the underlying storage allocation of the volume.\n  This may not be available for some pool types.\n\n- `size` (string) - Providing the total storage allocation for the volume.\n  This may be smaller than the logical capacity if the volume is sparsely allocated.\n  It may also be larger than the logical capacity if the volume has substantial metadata overhead.\n  If omitted when creating a volume, the volume will be fully allocated at time of creation.\n  If set to a value smaller than the capacity, the pool has the option of deciding to sparsely allocate a volume.\n  It does not have to honour requests for sparse allocation though.\n  Different types of pools may treat sparse volumes differently.\n  For example, the logical pool will not automatically expand volume's allocation when it gets full;\n\n- `capacity` (string) - Providing the logical capacity for the volume. This value is in bytes by default,\n  but a unit attribute can be specified with the same semantics as for allocation\n  This is compulsory when creating a volume.\n\n- `readonly` (bool) - If true, it indicates the device cannot be modified by the guest.\n\n- `target_dev` (string) - DEPRECATED!\n  The device order on the bus is determined automatically from the order of definition\n\n- `bus` (string) - The optional bus attribute specifies the type of disk device to emulate;\n  possible values are driver specific, with typical values being\n  `ide`, `scsi`, `virtio`, `xen`, `usb`, `sata`, or `sd` `sd` since 1.1.2.\n  If omitted, the bus type is inferred from the style of the device name\n  (e.g. a device named 'sda' will typically be exported using a SCSI bus).\n\n- `alias` (string) - To help users identifying devices they care about, every device can have an alias which must be unique within the domain.\n  Additionally, the identifier must consist only of the following characters: `[a-zA-Z0-9_-]`.\n\n- `format` (string) - Specifies the volume format type, like `qcow`, `qcow2`, `vmdk`, `raw`. If omitted, the storage pool's default format\n  will be used.\n\n- `device` (string) - Specifies the device type. If omitted, defaults to \"disk\". Can be `disk`, `floppy`, `cdrom` or `lun`.\n\n<!-- End of code generated from the comments of the Volume struct in builder/libvirt/volume/volume.go; -->\n\n\n#### Backing-store volume source\nBacking-store source instructs libvirt to use an already presented volume as a base for this volume.\n\n<!-- Code generated from the comments of the BackingStoreVolumeSource struct in builder/libvirt/volume/backing_store.go; DO NOT EDIT MANUALLY -->\n\n- `pool` (string) - Specifies the name of the storage pool (managed by libvirt) where the disk source resides\n\n- `volume` (string) - Specifies the name of storage volume (managed by libvirt) used as the disk source.\n\n- `path` (string) - The file backing the volume. Mutually exclusive with pool and volume args!\n\n<!-- End of code generated from the comments of the BackingStoreVolumeSource struct in builder/libvirt/volume/backing_store.go; -->\n\n\nExample\n\n```hcl\nvolume {\n  target_dev = \"sda\"\n  bus        = \"sata\"\n\n  pool = \"default\"\n  name = \"custom-image\"\n\n  source {\n    type = \"backing-store\"\n\n    pool   = \"base-images\"\n    volume = \"ubuntu-22.04-lts\"\n  }\n  capacity = \"20G\"\n}\n```\n\n#### Cloning a volume\nIf you wish to clone a volume instead of using a backing store overlay described above,\nYou have the option to use the `cloning` source type.\n\n<!-- Code generated from the comments of the CloningVolumeSource struct in builder/libvirt/volume/cloning.go; DO NOT EDIT MANUALLY -->\n\n- `volume` (string) - Specifies the name of storage volume (managed by libvirt) used as the disk source.\n\n<!-- End of code generated from the comments of the CloningVolumeSource struct in builder/libvirt/volume/cloning.go; -->\n\n\nExample\n\n```hcl\nvolume {\n  target_dev = \"sda\"\n  bus        = \"sata\"\n\n  pool = \"default\"\n  name = \"custom-image\"\n\n  source {\n    type = \"cloning\"\n\n    pool   = \"base-images\"\n    volume = \"ubuntu-22.04-lts\"\n  }\n}\n```\n\n#### Cloud-init volume source\nLinux domains running in a libvirt environment can be set up with the \n[NoCloud cloud-init datasource](https://cloudinit.readthedocs.io/en/latest/topics/datasources/nocloud.html).\nThis means a small ISO image with the label `CIDATA` will be assembled at the machine running packer and will be uploaded to the volume.\nTo assemble an ISO image, one of the following commands must be installed at the machine running packer and must be available \nin the `PATH`: `xorriso`, `mkisofs`, `hdiutil` or `oscdimg`.\n\nFor cloud-init backed sources, the size and capacity attributes can be omitted for the volume.\n\n<!-- Code generated from the comments of the CloudInitSource struct in builder/libvirt/volume/cloudinit.go; DO NOT EDIT MANUALLY -->\n\n- `meta_data` (\\*string) - [optional] NoCloud instance metadata as string.\n  If not present, a default one will be generated with the instance-id set to the same value as the domain name\n  If you want to set network config, see the `network_config` attribute\n\n- `user_data` (\\*string) - [optional] CloudInit user-data as string.\n  See [cloud-init documentation](https://cloudinit.readthedocs.io/en/latest/topics/format.html) for more\n\n- `network_config` (\\*string) - [optional] Network configuration for cloud-init to be picked up.\n  User-data cannot change an instance’s network configuration.\n  In the absence of network configuration in any sources,\n  Cloud-init will write out a network configuration that will issue a DHCP request on a “first” network interface.\n  Read more about the possible format and features at\n  [cloud-init documentation](https://cloudinit.readthedocs.io/en/latest/topics/network-config.html).\n\n<!-- End of code generated from the comments of the CloudInitSource struct in builder/libvirt/volume/cloudinit.go; -->\n\n\nExample:\n\n```hcl\nvolume {\n  target_dev = \"sdb\"\n  bus        = \"sata\"\n  source {\n    type = \"cloud-init\"\n\n    meta_data = jsonencode({\n      \"instance-id\" = \"i-abcdefghijklm\"\n      \"hostname\"    = \"my-packer-builder\"\n    })\n\n    user_data =  format(\"#cloud-config\\n%s\", jsonencode({\n      packages = [\n            \"qemu-guest-agent\",\n        ]\n        runcmd = [\n            [\"systemctl\", \"enable\", \"--now\", \"qemu-guest-agent\"],\n        ]\n        ssh_authorized_keys = [\n            data.sshkey.install.public_key,\n        ]\n    }))\n\n    network_config = jsonencode({\n      version = 2\n        ethernets = {\n            eth = {\n                match = {\n                    name = \"en*\"\n                }\n                dhcp4 = true\n            }\n        }\n    })\n  }\n}\n```\n\n#### External volume source\n\n<!-- Code generated from the comments of the ExternalVolumeSource struct in builder/libvirt/volume/external.go; DO NOT EDIT MANUALLY -->\n\nAn external volume source defines a volume source that is external (or remote) to\nthe libvirt hypervisor. This usually means a cloud image or installation media\nfrom the web or local machine. It's using go-getter under the hood with support\nfor HTTP, HTTPS, S3, SMB and local files. The files will be cached by Packer.\n\n<!-- End of code generated from the comments of the ExternalVolumeSource struct in builder/libvirt/volume/external.go; -->\n\n<!-- Code generated from the comments of the ExternalVolumeSource struct in builder/libvirt/volume/external.go; DO NOT EDIT MANUALLY -->\n\n- `checksum` (string) - The checksum and the type of the checksum for the download\n\n- `urls` ([]string) - A list of URLs from where this volume can be obtained\n\n<!-- End of code generated from the comments of the ExternalVolumeSource struct in builder/libvirt/volume/external.go; -->\n\n\nExample:\n\n```hcl\nvolume {\n  alias = \"artifact\"\n\n  pool = \"base-images\"\n  name = \"ubuntu-22.04-lts\"\n\n  source {\n    type     = \"external\"\n    urls     = [\"https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64-disk-kvm.img\"]\n    checksum = \"2a0d8745dee674a7f3038d627d39ff68e5d7276f97866a4abd9ebfcb3df5fa05\"\n  }\n\n  format = \"qcow2\"\n\n  capacity = \"1G\"\n\n  bus        = \"sata\"\n  target_dev = \"sda\"\n}\n\n```\n\n#### Files volume source\n\n<!-- Code generated from the comments of the FilesVolumeSource struct in builder/libvirt/volume/files.go; DO NOT EDIT MANUALLY -->\n\nCreate an image with files local to where packer runs and make it available at boot time.\nDepending on the parent volume's `device` attribute, the result will be a cdrom or a floppy image.\nUse this volume source scarcely, for example when the files needed as early as boot time.\nIn general, making local files available on the remote machine is better done with the file provisioner.\nFloppies must not exceed the size 1.44MiB.\n\n<!-- End of code generated from the comments of the FilesVolumeSource struct in builder/libvirt/volume/files.go; -->\n\n<!-- Code generated from the comments of the FilesVolumeSource struct in builder/libvirt/volume/files.go; DO NOT EDIT MANUALLY -->\n\n- `files` ([]string) - Files can be either files or directories. An files provided here will\n  be written to the root of the CD or Floppy. Directories will be written to the\n  root of the CD as well, but will retain their subdirectory structure.\n  For a cdrom, the behaviour is the same as `cd_files`. For floppy disks, the behaviour\n  is the same as for `floppy_dirs`!\n\n- `contents` (map[string]string) - Key/Value pairs to add to the CD or Floppy. The keys represent the paths, and the values\n  represent the contents. Can be used together with `files`. If any paths are specified by\n  both, `contents` will take precedence.\n\n- `label` (string) - Label\n\n<!-- End of code generated from the comments of the FilesVolumeSource struct in builder/libvirt/volume/files.go; -->\n\n\nExamples:\n\n* Create a floppy disk for unattended Windows installation *\n```hcl\nvolume {\n  alias = \"unattend\"\n\n  device = \"floppy\"\n\n  source {\n    type = \"files\"\n    label = \"unattend\"\n    contents = {\n      \"Unattend.xml\" = templatefile(\"${path.root}/Unattend.xml.tmpl\", {ComputerName = \"MyMachine\"})\n    }\n  }\n}\n```\n\n* Create a CDROM for drivers stored locally\n```hcl\nvolume {\n  alias = \"drivers\"\n  device = \"cdrom\"\n\n  source {\n    type = \"files\"\n    label = \"drivers\"\n    files = [\"./drivers/*\"]\n  }\n}\n```\n\n### Network\nNetwork interfaces can be attached to a builder domain by adding a `network_interface { }` block for each.\nCurrently only `managed` and `bridge` networks are supported.\n\n<!-- Code generated from the comments of the NetworkInterface struct in builder/libvirt/network/network.go; DO NOT EDIT MANUALLY -->\n\n- `type` (string) - [required] Type of attached network interface\n\n<!-- End of code generated from the comments of the NetworkInterface struct in builder/libvirt/network/network.go; -->\n\n<!-- Code generated from the comments of the NetworkInterface struct in builder/libvirt/network/network.go; DO NOT EDIT MANUALLY -->\n\n- `mac` (string) - [optional] If needed, a MAC address can be specified for the network interface.\n  If not specified, Libvirt will generate and assign a random MAC address\n\n- `alias` (string) - [optional] To help users identifying devices they care about, every device can have an alias which must be unique within the domain.\n  Additionally, the identifier must consist only of the following characters: `[a-zA-Z0-9_-]`.\n\n- `model` (string) - [optional] Defines how the interface should be modeled for the domain.\n  Typical values for QEMU and KVM include: `ne2k_isa` `i82551` `i82557b` `i82559er` `ne2k_pci` `pcnet` `rtl8139` `e1000` `virtio`.\n  If nothing is specified, `virtio` will be used as a default.\n\n<!-- End of code generated from the comments of the NetworkInterface struct in builder/libvirt/network/network.go; -->\n\n\n#### Communicators and network interfaces\nIf an SSH or WinRM address is specified in the communicator block, packer will use that address to communicate with the\nbuilder domain.\n\nIf no SSH or WinRM address is specified, the libvirt builder tries to find an address for initiating communications.\nIf only one network interface is specified for a builder domain, and there is no `communicator_interface` specified for\nthe domain, then that interface will be used as the interface for communication.\n\nIf more than one network interface is specified, the communicator interface must be tagged by setting the same alias as \nspecified with the `communicator_interface` domain attribute (which is \"communicator\" by default.)\n\nThe `network_address_source` domain attribute controls how the address discovery will take place. There are three \npossible way to discover a domain's virtual address:\n- `agent`: this is the most reliable method for getting an address for the domain, but it requires `qemu-guest-agent`\n           running in the domain. This is the default method for domains.\n- `lease`: if for some reason, the guest agent can not be started, but the communicator interface is connected to\n           one of libvirt's managed networks, you can use `lease` to see what DHCP lease was offered for the interface.\n- `arp`: this method relies on the libvirt host ARP table to find an IP address associated with the MAC address given to\n         the domain.\n\nExamples\n\nFor connecting to a managed network\n```hcl\nnetwork_interface {\n  type    = \"managed\"\n  network = \"my-managed-network\"\n}\n```\n\nFor connecting to a bridge\n```hcl\nnetwork_interface {\n  type   = \"bridge\"\n  bridge = \"br0\"\n}\n```\n\n### Graphics and video, headless domains\nLibvirt builder creates a headless domain by default with no video card or monitor attached to it. Most linux distributions\nand cloud images are fine with this setup, but you might need to add a video card and a graphical interface to your machine.\n\nYou can add one (or more) graphic device to your machine by using the `graphics { }` block.\nIf at least one graphic device is added to the builder configuration, a video device with the model `virtio` will\nautomatically be added to the domain.\nCurrently, there is no option to specify or customize just a video device for a domain.\n\n<!-- Code generated from the comments of the DomainGraphic struct in builder/libvirt/config_graphics.go; DO NOT EDIT MANUALLY -->\n\n- `type` (string) - Type of the graphic defined with this block. Required. Must be either `vnc` or `sdl`.\n\n<!-- End of code generated from the comments of the DomainGraphic struct in builder/libvirt/config_graphics.go; -->\n\n<!-- Code generated from the comments of the SdlDomainGraphic struct in builder/libvirt/config_graphics.go; DO NOT EDIT MANUALLY -->\n\n- `display` (string) - An X11 Display number where the SDL window will be sent. Required for type `sdl`\n\n<!-- End of code generated from the comments of the SdlDomainGraphic struct in builder/libvirt/config_graphics.go; -->\n\n<!-- Code generated from the comments of the VNCDomainGraphic struct in builder/libvirt/config_graphics.go; DO NOT EDIT MANUALLY -->\n\n- `port` (int) - TCP port used for VNC server to listen on.\n  The number zero means the hypervisor will pick a free port randomly.\n  If not set, the autoport feature will be used.\n\n<!-- End of code generated from the comments of the VNCDomainGraphic struct in builder/libvirt/config_graphics.go; -->\n\n\n### Debugging a build\nBy default, Libvirt builder assigns two serial console to the domain with the aliases `serial-console` and `virtual-console`.\nYou can use your virtual manager to connect to one of these consoles for debug.\n\nIf you don't have access to a virtual machine manager, if specifying the `-debug` flag and `PACKER_LOG=1` environment\nvariable to packer simultaneously while setting the `PACKER_LIBVIRT_STREAM_CONSOLE` to one of the console aliases, \nthe builder will connect to that console and logs any message the domain sends to that console.\nIn no way, shape or form should this be used in any production or serious setup!\n\n### A simple builder definition example\n\nThe following example will download and then upload an ubuntu cloud image to the default storage pool, then starts a\nlibvirt domain accessing the default libvirt network. Additionally, the example will create an SSH key and add \na cloud-init image to the domain in order to enable Packer to connect to the domain and run provisioners.\n\n```hcl\npacker {\n  required_plugins {\n    sshkey = {\n      version = \">= 1.0.1\"\n      source = \"github.com/ivoronin/sshkey\"\n    }\n    libvirt = {\n      version = \">= 0.5.0\"\n      source  = \"github.com/thomasklein94/libvirt\"\n    }\n  }\n}\n\ndata \"sshkey\" \"install\" {\n}\n\nsource \"libvirt\" \"example\" {\n  libvirt_uri = \"qemu:///system\"\n\n  vcpu   = 1\n  memory = 846\n\n  network_interface {\n    type  = \"managed\"\n    alias = \"communicator\"\n  }\n\n  # https://developer.hashicorp.com/packer/plugins/builders/libvirt#communicators-and-network-interfaces\n  communicator {\n    communicator         = \"ssh\"\n    ssh_username         = \"ubuntu\"\n    ssh_private_key_file = data.sshkey.install.private_key_path\n  }\n  network_address_source = \"lease\"\n\n  volume {\n    alias = \"artifact\"\n\n    source {\n      type     = \"external\"\n      # With newer releases, the URL and the checksum can change.\n      urls     = [\"https://cloud-images.ubuntu.com/releases/22.04/release-20230302/ubuntu-22.04-server-cloudimg-amd64-disk-kvm.img\"]\n      checksum = \"3b11d66d8211a8c48ed9a727b9a74180ac11cd8118d4f7f25fc7d1e4a148eddc\"\n    }\n\n    capacity   = \"10G\"\n    target_dev = \"sda\"\n    bus        = \"sata\"\n    format     = \"qcow2\"\n  }\n\n  volume {\n    source {\n      type = \"cloud-init\"\n      user_data = format(\"#cloud-config\\n%s\", jsonencode({\n        ssh_authorized_keys = [\n          data.sshkey.install.public_key,\n        ]\n      }))\n\n    }\n\n    target_dev = \"sdb\"\n    bus        = \"sata\"\n  }\n  shutdown_mode = \"acpi\"\n}\n\nbuild {\n  sources = [\"source.libvirt.example\"]\n  provisioner \"shell\" {\n    inline = [\n      \"echo The domain has started and became accessible\",\n      \"echo The domain has the following addresses\",\n      \"ip -br a\",\n      \"echo if you want to connect via SSH use the following key: ${data.sshkey.install.private_key_path}\",\n    ]\n  }\n  provisioner \"breakpoint\" {\n    note = \"You can examine the created domain with virt-manager, virsh or via SSH\"\n  }\n}\n```\n","sourceUrl":"https://github.com/thomasklein94/packer-plugin-libvirt/blob/main/docs/builders/libvirt.mdx"},"pluginData":{"title":"Libvirt","path":"libvirt","repo":"thomasklein94/packer-plugin-libvirt","pluginTier":"community","version":"latest","files":[]},"fullPath":"/packer/plugins/builders/libvirt","id":"sidebar-nav-item-41"}],"id":"sidebar-nav-item-40"}],"id":"sidebar-nav-item-39"},{"title":"Mondoo","routes":[{"title":"Provisioners","routes":[{"title":"cnspec","path":"provisioners/mondoo/cnspec","remoteFile":{"filePath":"docs/provisioners/cnspec.mdx"},"pluginData":{"title":"Mondoo","path":"mondoo","repo":"mondoohq/packer-plugin-mondoo","pluginTier":"verified","version":"latest","files":[]},"fullPath":"/packer/plugins/provisioners/mondoo/cnspec","id":"sidebar-nav-item-44"},{"title":"Mondoo","path":"provisioners/mondoo/mondoo","remoteFile":{"filePath":"docs/provisioners/mondoo.mdx"},"pluginData":{"title":"Mondoo","path":"mondoo","repo":"mondoohq/packer-plugin-mondoo","pluginTier":"verified","version":"latest","files":[]},"fullPath":"/packer/plugins/provisioners/mondoo/mondoo","id":"sidebar-nav-item-45"}],"id":"sidebar-nav-item-43"}],"id":"sidebar-nav-item-42"},{"title":"Nutanix","routes":[{"title":"Builders","routes":[{"title":"Overview","path":"builders/nutanix","remoteFile":{"filePath":"docs/builders/index.mdx"},"pluginData":{"title":"Nutanix","path":"nutanix","repo":"nutanix-cloud-native/packer-plugin-nutanix","version":"latest","pluginTier":"verified","sourceBranch":"main","files":[]},"fullPath":"/packer/plugins/builders/nutanix","id":"sidebar-nav-item-48"},{"title":"Nutanix","path":"builders/nutanix/nutanix","remoteFile":{"filePath":"docs/builders/nutanix.mdx"},"pluginData":{"title":"Nutanix","path":"nutanix","repo":"nutanix-cloud-native/packer-plugin-nutanix","version":"latest","pluginTier":"verified","sourceBranch":"main","files":[]},"fullPath":"/packer/plugins/builders/nutanix/nutanix","id":"sidebar-nav-item-49"}],"id":"sidebar-nav-item-47"}],"id":"sidebar-nav-item-46"},{"title":"Outscale","routes":[{"title":"Builders","routes":[{"title":"Overview","path":"builders/outscale","remoteFile":{"filePath":"docs/builders/index.mdx"},"pluginData":{"title":"Outscale","path":"outscale","repo":"outscale/packer-plugin-outscale","version":"latest","pluginTier":"verified","isHcpPackerReady":true,"files":[]},"fullPath":"/packer/plugins/builders/outscale","id":"sidebar-nav-item-52"},{"title":"BSU","path":"builders/outscale/outscale-bsu","remoteFile":{"filePath":"docs/builders/outscale-bsu.mdx"},"pluginData":{"title":"Outscale","path":"outscale","repo":"outscale/packer-plugin-outscale","version":"latest","pluginTier":"verified","isHcpPackerReady":true,"files":[]},"fullPath":"/packer/plugins/builders/outscale/outscale-bsu","id":"sidebar-nav-item-53"},{"title":"BSU Surrogate","path":"builders/outscale/outscale-bsusurrogate","remoteFile":{"filePath":"docs/builders/outscale-bsusurrogate.mdx"},"pluginData":{"title":"Outscale","path":"outscale","repo":"outscale/packer-plugin-outscale","version":"latest","pluginTier":"verified","isHcpPackerReady":true,"files":[]},"fullPath":"/packer/plugins/builders/outscale/outscale-bsusurrogate","id":"sidebar-nav-item-54"},{"title":"BSU Volume","path":"builders/outscale/outscale-bsuvolume","remoteFile":{"filePath":"docs/builders/outscale-bsuvolume.mdx"},"pluginData":{"title":"Outscale","path":"outscale","repo":"outscale/packer-plugin-outscale","version":"latest","pluginTier":"verified","isHcpPackerReady":true,"files":[]},"fullPath":"/packer/plugins/builders/outscale/outscale-bsuvolume","id":"sidebar-nav-item-55"},{"title":"chroot","path":"builders/outscale/outscale-chroot","remoteFile":{"filePath":"docs/builders/outscale-chroot.mdx"},"pluginData":{"title":"Outscale","path":"outscale","repo":"outscale/packer-plugin-outscale","version":"latest","pluginTier":"verified","isHcpPackerReady":true,"files":[]},"fullPath":"/packer/plugins/builders/outscale/outscale-chroot","id":"sidebar-nav-item-56"}],"id":"sidebar-nav-item-51"},{"title":"Data Sources","routes":[{"title":"Outscale OMI","path":"datasources/outscale","remoteFile":{"filePath":"docs/datasources/omi.mdx"},"pluginData":{"title":"Outscale","path":"outscale","repo":"outscale/packer-plugin-outscale","version":"latest","pluginTier":"verified","isHcpPackerReady":true,"files":[]},"fullPath":"/packer/plugins/datasources/outscale","id":"sidebar-nav-item-58"}],"id":"sidebar-nav-item-57"}],"id":"sidebar-nav-item-50"},{"title":"Scaleway","routes":[{"title":"Builders","routes":[{"title":"Scaleway","path":"builders/scaleway","remoteFile":{"filePath":"docs/builders/scaleway.mdx"},"pluginData":{"title":"Scaleway","path":"scaleway","repo":"scaleway/packer-plugin-scaleway","pluginTier":"verified","version":"latest","files":[]},"fullPath":"/packer/plugins/builders/scaleway","id":"sidebar-nav-item-61"}],"id":"sidebar-nav-item-60"}],"id":"sidebar-nav-item-59"},{"title":"SSH Key","routes":[{"title":"Data Sources","routes":[{"title":"SSH Key","path":"datasources/sshkey","remoteFile":{"filePath":"docs/datasources/sshkey.mdx"},"pluginData":{"title":"SSH Key","path":"sshkey","repo":"ivoronin/packer-plugin-sshkey","pluginTier":"community","version":"latest","files":[]},"fullPath":"/packer/plugins/datasources/sshkey","id":"sidebar-nav-item-64"}],"id":"sidebar-nav-item-63"}],"id":"sidebar-nav-item-62"},{"title":"Tart","routes":[{"title":"Builders","routes":[{"title":"Tart","path":"builders/tart","remoteFile":{"filePath":"docs/builders/tart.mdx"},"pluginData":{"title":"Tart","path":"tart","repo":"cirruslabs/packer-plugin-tart","pluginTier":"community","version":"latest","files":[]},"fullPath":"/packer/plugins/builders/tart","id":"sidebar-nav-item-67"}],"id":"sidebar-nav-item-66"}],"id":"sidebar-nav-item-65"},{"title":"UCloud","routes":[{"title":"Builders","routes":[{"title":"UCloud","path":"builders/ucloud","remoteFile":{"filePath":"docs/builders/uhost.mdx"},"pluginData":{"title":"UCloud","path":"ucloud","repo":"ucloud/packer-plugin-ucloud","version":"latest","pluginTier":"community","files":[]},"fullPath":"/packer/plugins/builders/ucloud","id":"sidebar-nav-item-70"}],"id":"sidebar-nav-item-69"},{"title":"Post-Processors","routes":[{"title":"UCloud Import","path":"post-processors/ucloud","remoteFile":{"filePath":"docs/post-processors/import.mdx"},"pluginData":{"title":"UCloud","path":"ucloud","repo":"ucloud/packer-plugin-ucloud","version":"latest","pluginTier":"community","files":[]},"fullPath":"/packer/plugins/post-processors/ucloud","id":"sidebar-nav-item-72"}],"id":"sidebar-nav-item-71"}],"id":"sidebar-nav-item-68"},{"title":"UpCloud","routes":[{"title":"Builders","routes":[{"title":"upcloud","path":"builders/upcloud","remoteFile":{"filePath":"docs/builders/upcloud.mdx"},"pluginData":{"title":"UpCloud","path":"upcloud","repo":"UpCloudLtd/packer-plugin-upcloud","version":"latest","pluginTier":"verified","sourceBranch":"master","isHcpPackerReady":true,"files":[]},"fullPath":"/packer/plugins/builders/upcloud","id":"sidebar-nav-item-75"}],"id":"sidebar-nav-item-74"},{"title":"Post-Processors","routes":[{"title":"upcloud-import","path":"post-processors/upcloud","remoteFile":{"filePath":"docs/post-processors/upcloud-import.mdx"},"pluginData":{"title":"UpCloud","path":"upcloud","repo":"UpCloudLtd/packer-plugin-upcloud","version":"latest","pluginTier":"verified","sourceBranch":"master","isHcpPackerReady":true,"files":[]},"fullPath":"/packer/plugins/post-processors/upcloud","id":"sidebar-nav-item-77"}],"id":"sidebar-nav-item-76"}],"id":"sidebar-nav-item-73"},{"title":"Volcengine","routes":[{"title":"Builders","routes":[{"title":"Volcengine ECS","path":"builders/volcengine","remoteFile":{"filePath":"docs/builders/volcengine-ecs.mdx"},"pluginData":{"title":"Volcengine","path":"volcengine","repo":"volcengine/packer-plugin-volcengine","pluginTier":"community","version":"latest","files":[]},"fullPath":"/packer/plugins/builders/volcengine","id":"sidebar-nav-item-80"}],"id":"sidebar-nav-item-79"}],"id":"sidebar-nav-item-78"},{"title":"Vultr","routes":[{"title":"Builders","routes":[{"title":"Vultr","path":"builders/vultr","remoteFile":{"filePath":"docs/builders/vultr.mdx"},"pluginData":{"title":"Vultr","path":"vultr","repo":"vultr/packer-plugin-vultr","pluginTier":"community","version":"latest","files":[]},"fullPath":"/packer/plugins/builders/vultr","id":"sidebar-nav-item-83"}],"id":"sidebar-nav-item-82"}],"id":"sidebar-nav-item-81"},{"title":"Ksyun","routes":[{"title":"Builders","routes":[{"title":"Epc","path":"builders/ksyun/epc","remoteFile":{"filePath":"docs/builders/epc.mdx"},"pluginData":{"title":"Ksyun","path":"ksyun","repo":"kingsoftcloud/packer-plugin-ksyun","pluginTier":"community","version":"latest","files":[]},"fullPath":"/packer/plugins/builders/ksyun/epc","id":"sidebar-nav-item-86"},{"title":"Instance(KEC)","path":"builders/ksyun/kec","remoteFile":{"filePath":"docs/builders/kec.mdx"},"pluginData":{"title":"Ksyun","path":"ksyun","repo":"kingsoftcloud/packer-plugin-ksyun","pluginTier":"community","version":"latest","files":[]},"fullPath":"/packer/plugins/builders/ksyun/kec","id":"sidebar-nav-item-87"}],"id":"sidebar-nav-item-85"},{"title":"Data Sources","routes":[{"title":"Ksyun KMI","path":"datasources/ksyun","remoteFile":{"filePath":"docs/datasources/kmi.mdx"},"pluginData":{"title":"Ksyun","path":"ksyun","repo":"kingsoftcloud/packer-plugin-ksyun","pluginTier":"community","version":"latest","files":[]},"fullPath":"/packer/plugins/datasources/ksyun","id":"sidebar-nav-item-89"}],"id":"sidebar-nav-item-88"}],"id":"sidebar-nav-item-84"}],"title":"Plugins","visuallyHideTitle":true}],"mainWidth":"narrow"},"outlineItems":[{"title":"Libvirt","url":"#libvirt","dataHeapTrack":"toc-list-item-index-0"}],"metadata":{"title":"Libvirt - Builders","description":"The Libvirt Builder is able to create Libvirt volumes on your libvirt hypervisor by copying an image from a http source, by using already existing volumes as a backing store, or creating an empty one and starting a libvirt domain with these volumes attached.\n"},"mdxSource":{"compiledSource":"var c=Object.defineProperty,d=Object.defineProperties;var N=Object.getOwnPropertyDescriptors;var p=Object.getOwnPropertySymbols;var o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;var l=(a,n,t)=>n in a?c(a,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[n]=t,e=(a,n)=>{for(var t in n||(n={}))o.call(n,t)&&l(a,t,n[t]);if(p)for(var t of p(n))i.call(n,t)&&l(a,t,n[t]);return a},r=(a,n)=>d(a,N(n));var m=(a,n)=>{var t={};for(var s in a)o.call(a,s)&&n.indexOf(s)<0&&(t[s]=a[s]);if(a!=null&&p)for(var s of p(a))n.indexOf(s)<0&&i.call(a,s)&&(t[s]=a[s]);return t};const makeShortcode=a=>function(t){return console.warn(\"Component \"+a+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",e({},t))},BadgesHeader=makeShortcode(\"BadgesHeader\"),PluginBadge=makeShortcode(\"PluginBadge\"),Badge=makeShortcode(\"Badge\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(t){var s=t,{components:a}=s,n=m(s,[\"components\"]);return mdx(MDXLayout,r(e(e({},layoutProps),n),{components:a,mdxType:\"MDXLayout\"}),mdx(BadgesHeader,{mdxType:\"BadgesHeader\"},mdx(PluginBadge,{type:\"community\",mdxType:\"PluginBadge\"}),mdx(Badge,{href:\"https://github.com/thomasklein94/packer-plugin-libvirt/releases/tag/v0.5.0\",label:\"v0.5.0\",theme:\"light-gray\",mdxType:\"Badge\"})),mdx(\"h1\",e({},{className:\"g-type-display-2\",id:\"libvirt\"}),mdx(\"a\",e({parentName:\"h1\"},{className:\"__permalink-h\",href:\"#libvirt\",\"aria-label\":\"libvirt permalink\"}),\"\\xBB\"),\"Libvirt\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Type: \",mdx(\"inlineCode\",{parentName:\"p\"},\"libvirt\"),`\nArtifact BuilderId: `,mdx(\"inlineCode\",{parentName:\"p\"},\"thomasklein94.libvirt\")),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`The Libvirt Builder is able to create Libvirt volumes on your libvirt hypervisor\nby copying an image from a http source, by using already existing volumes as a backing store,\nor creating an empty one and starting a libvirt domain with these volumes attached.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Libvirt builder also supports cloudinit images during build.\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Before looking at the configuration options and examples, you might also want to check out and\nfamiliarize yourself with `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://libvirt.org/formatdomain.html\"}),\"libvirt's domain specification\"),`\nand `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://libvirt.org/formatstorage.html\"}),\"libvirt's storage pool and volume concepts\"),\".\"),mdx(\"h3\",e({},{className:\"g-type-display-4\",id:\"installation\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#installation\",\"aria-label\":\"installation permalink\"}),\"\\xBB\"),\"Installation\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"To use the pre-built release of Packer Plugin Libvirt, you can add the following snippet to your Packer project:\"),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"packer\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"required_plugins\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"libvirt\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"version\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\">= 0.5.0\"'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"source\"),\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"github.com/thomasklein94/libvirt\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"h3\",e({},{className:\"g-type-display-4\",id:\"required\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#required\",\"aria-label\":\"required permalink\"}),\"\\xBB\"),\"Required\"),mdx(\"ul\",null,mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"libvirt_uri\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"a\",e({parentName:\"li\"},{href:\"#libvirt_uri\",\"aria-label\":\"libvirt_uri permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"libvirt_uri\")),\" (string) - Libvirt URI\")),mdx(\"h3\",e({},{className:\"g-type-display-4\",id:\"optional\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#optional\",\"aria-label\":\"optional permalink\"}),\"\\xBB\"),\"Optional\"),mdx(\"ul\",null,mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"communicator\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#communicator\",\"aria-label\":\"communicator permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"communicator\")),` (communicator.Config) - Communicator configuration\nSee `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://www.packer.io/docs/communicators\"}),\"Packer's documentation\"),\" for more.\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"domain_name\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#domain_name\",\"aria-label\":\"domain_name permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"domain_name\")),` (string) - The libvirt name of the domain (virtual machine) running your build\nIf not specified, a random name with the prefix `,mdx(\"inlineCode\",{parentName:\"p\"},\"packer-\"),\" will be used\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"memory\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#memory\",\"aria-label\":\"memory permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"memory\")),` (int) - The amount of memory to use when building the VM\nin megabytes. This defaults to 512 megabytes.`)),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"vcpu\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#vcpu\",\"aria-label\":\"vcpu permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"vcpu\")),` (int) - The number of cpus to use when building the VM.\nThe default is `,mdx(\"inlineCode\",{parentName:\"p\"},\"1\"),\" CPU.\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"cpu_mode\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#cpu_mode\",\"aria-label\":\"cpu_mode permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"cpu_mode\")),` (string) - Set CPU mode, you might want to set it to \"host-passthrough\".\nSee `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://libvirt.org/formatdomain.html#cpu-model-and-topology\"}),\"libvirt documentation\"),` for more information.\nIf not specified, let libvirt decide.`)),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"network_interface\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#network_interface\",\"aria-label\":\"network_interface permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"network_interface\")),\" ([]network.NetworkInterface) - Network interface attachments. See \",mdx(\"a\",e({parentName:\"p\"},{href:\"#network\"}),\"Network\"),\" for more.\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"communicator_interface\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#communicator_interface\",\"aria-label\":\"communicator_interface permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"communicator_interface\")),` (string) - The alias of the network interface used for the SSH/WinRM connections\nSee `,mdx(\"a\",e({parentName:\"p\"},{href:\"#communicators-and-network-interfaces\"}),\"Communicators and network interfaces\"))),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"volume\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#volume\",\"aria-label\":\"volume permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"volume\")),\" ([]volume.Volume) - See \",mdx(\"a\",e({parentName:\"p\"},{href:\"#volumes\"}),\"Volumes\"))),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"artifact_volume_alias\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#artifact_volume_alias\",\"aria-label\":\"artifact_volume_alias permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"artifact_volume_alias\")),` (string) - The alias of the drive designated to be the artifact. To learn more,\nsee `,mdx(\"a\",e({parentName:\"p\"},{href:\"#volumes\"}),\"Volumes\"))),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"boot_devices\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#boot_devices\",\"aria-label\":\"boot_devices permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"boot_devices\")),` ([]string) - Device(s) from which to boot, defaults to hard drive (first volume)\nAvailable boot devices are: `,mdx(\"inlineCode\",{parentName:\"p\"},\"hd\"),\", \",mdx(\"inlineCode\",{parentName:\"p\"},\"network\"),\", \",mdx(\"inlineCode\",{parentName:\"p\"},\"cdrom\"))),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"graphics\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#graphics\",\"aria-label\":\"graphics permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"graphics\")),\" ([]DomainGraphic) - See \",mdx(\"a\",e({parentName:\"p\"},{href:\"#graphics-and-video-headless-domains\"}),\"Graphics and video, headless domains\"),\".\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"network_address_source\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#network_address_source\",\"aria-label\":\"network_address_source permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"network_address_source\")),` (string) - The alias of the network interface designated as the communicator interface.\nCan be either `,mdx(\"inlineCode\",{parentName:\"p\"},\"agent\"),\", \",mdx(\"inlineCode\",{parentName:\"p\"},\"lease\"),\" or \",mdx(\"inlineCode\",{parentName:\"p\"},\"arp\"),\". Default value is \",mdx(\"inlineCode\",{parentName:\"p\"},\"agent\"),`.\nTo learn more, see `,mdx(\"a\",e({parentName:\"p\"},{href:\"#communicators-and-network-interfaces\"}),\"Communicators and network interfaces\"),`\nin the builder documentation.`)),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"shutdown_mode\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#shutdown_mode\",\"aria-label\":\"shutdown_mode permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"shutdown_mode\")),` (string) - Packer will instruct libvirt to use this mode to properly shut down the virtual machine\nbefore it attempts to destroy it. Available modes are: `,mdx(\"inlineCode\",{parentName:\"p\"},\"acpi\"),\", \",mdx(\"inlineCode\",{parentName:\"p\"},\"guest\"),\", \",mdx(\"inlineCode\",{parentName:\"p\"},\"initctl\"),\", \",mdx(\"inlineCode\",{parentName:\"p\"},\"signal\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"paravirt\"),`.\nIf not set, libvirt will choose the method of shutdown it considers the best.`)),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"shutdown_timeout\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#shutdown_timeout\",\"aria-label\":\"shutdown_timeout permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"shutdown_timeout\")),` (duration string | ex: \"1h5m2s\") - After succesfull provisioning, Packer will wait this long for the virtual machine to gracefully\nstop before it destroys it. If not specified, Packer will wait for 5 minutes.`)),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"domain_type\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#domain_type\",\"aria-label\":\"domain_type permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"domain_type\")),\" (string) - \",\"[Expert]\",` Domain type. It specifies the hypervisor used for running the domain.\nThe allowed values are driver specific, but include \"xen\", \"kvm\", \"hvf\", \"qemu\" and \"lxc\".\nDefault is kvm.\nIf unsure, leave it empty.`)),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"arch\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#arch\",\"aria-label\":\"arch permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"arch\")),\" (string) - \",\"[Expert]\",\" Domain architecture. Default is x86_64\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"chipset\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#chipset\",\"aria-label\":\"chipset permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"chipset\")),` (string) - Libvirt Machine Type\nValue for domain XML's machine type. If unsure, leave it empty`)),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"loader_path\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#loader_path\",\"aria-label\":\"loader_path permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"loader_path\")),\" (string) - \",\"[Expert]\",` Refers to a firmware blob, which is specified by absolute path, used to assist the domain creation process.\nIf unsure, leave it empty.`)),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"loader_type\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#loader_type\",\"aria-label\":\"loader_type permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"loader_type\")),\" (string) - \",\"[Expert]\",` Accepts values rom and pflash. It tells the hypervisor where in the guest memory the loader(rom) should be mapped.\nIf unsure, leave it empty.`)),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"secure_boot\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#secure_boot\",\"aria-label\":\"secure_boot permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"secure_boot\")),\" (bool) - \",\"[Expert]\",` Some firmwares may implement the Secure boot feature.\nThis attribute can be used to tell the hypervisor that the firmware is capable of Secure Boot feature.\nIt cannot be used to enable or disable the feature itself in the firmware.\nIf unsure, leave it empty.`)),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"nvram_path\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#nvram_path\",\"aria-label\":\"nvram_path permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"nvram_path\")),\" (string) - \",\"[Expert]\",` Some UEFI firmwares may want to use a non-volatile memory to store some variables.\nIn the host, this is represented as a file and the absolute path to the file is stored in this element.\nIf unsure, leave it empty.\\``)),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"nvram_template\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#nvram_template\",\"aria-label\":\"nvram_template permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"nvram_template\")),\" (string) - \",\"[Expert]\",` If the domain is an UEFI domain, libvirt copies a so called master NVRAM store file defined in qemu.conf.\nIf needed, the template attribute can be used to per domain override map of master NVRAM stores from the config file.\nIf unsure, leave it empty.`))),mdx(\"h3\",e({},{className:\"g-type-display-4\",id:\"aliases\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#aliases\",\"aria-label\":\"aliases permalink\"}),\"\\xBB\"),\"Aliases\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Libvirt offers a way to add one alias per device. Libvirt builder uses this to find out which volume should be the\nartifact in case there are multiple volume configurations present. Finding the communicator interface is similar in fashion.\nThere are reasonable defaults built into the builder to ease onboarding but they will produce a warning and it's\nrecommended to use aliases.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The identifier must consist only of the following characters: \",mdx(\"inlineCode\",{parentName:\"p\"},\"[a-zA-Z0-9_-]\"),`. Libvirt also requires the identifier\nto start with `,mdx(\"inlineCode\",{parentName:\"p\"},\"ua-\"),\", but libvirt builder will take care of that for you and prepend every alias with \",mdx(\"inlineCode\",{parentName:\"p\"},\"ua-\"),` before\napplying the domain definition to libvirt.`),mdx(\"h3\",e({},{className:\"g-type-display-4\",id:\"graceful-shutdown\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#graceful-shutdown\",\"aria-label\":\"graceful shutdown permalink\"}),\"\\xBB\"),\"Graceful shutdown\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`To ensure all changes were synced to the artifact volume,\nafter a `,mdx(\"strong\",{parentName:\"p\"},\"successful provisioning\"),`, the Libvirt plugin will try to gracefully terminate the builder instance\nby sending a shutdown command to libvirt and wait up to `,mdx(\"inlineCode\",{parentName:\"p\"},\"shutdown_timeout\"),` before forcefully destroys the domain.\nLibvirt supports multiple way to shut down a domain, which can be controlled by the `,mdx(\"inlineCode\",{parentName:\"p\"},\"shutdown_mode\"),\" attribute.\"),mdx(\"h3\",e({},{className:\"g-type-display-4\",id:\"volumes\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#volumes\",\"aria-label\":\"volumes permalink\"}),\"\\xBB\"),\"Volumes\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Libvirt uses volumes to attach as disks, to boot from and to persist data to. Libvirt Builder treats volumes as sources\nand possible artifacts. Arbitrary number of volumes can be attached to a builder domain with specifying a `,mdx(\"inlineCode\",{parentName:\"p\"},\"volume { }\"),`\nblock for each. The volume which will be the artifact of the build has to be marked with `,mdx(\"inlineCode\",{parentName:\"p\"},'alias = \"artifact\"'),\".\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`A volume defined with a source MUST NOT EXISTS BEFORE the build and WILL BE DESTROYED at the end of the build.\nThe only exception is when the volume marked as an artifact in which case a successful build prevents libvirt builder from\ndeleting the volume.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`If a volume does not have a source defined and does not marked as an artifact,\nthe volume must exists before the build, and will not be destroyed at the end of the build.`),mdx(\"ul\",null,mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"pool\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#pool\",\"aria-label\":\"pool permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"pool\")),` (string) - Specifies the name of the storage pool (managed by libvirt) where the disk resides. If not specified\nthe pool named `,mdx(\"inlineCode\",{parentName:\"p\"},\"default\"),\" will be used\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"name\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#name\",\"aria-label\":\"name permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"name\")),` (string) - Providing a name for the volume which is unique to the pool. (For a disk pool, the name must be\ncombination of the source device path device and next partition number to be\ncreated. For example, if the source device path is /dev/sdb and there are no\npartitions on the disk, then the name must be sdb1 with the next name being\nsdb2 and so on.)\nIf not provided, a name will be generated in a format of `,mdx(\"inlineCode\",{parentName:\"p\"},\"<domain_name>-<postfix>\"),` where\npostfix will be either the alias or a random id.\nFor cloudinit, the generated name will be `,mdx(\"inlineCode\",{parentName:\"p\"},\"<domain_name>-cloudinit\"))),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"source\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#source\",\"aria-label\":\"source permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"source\")),\" (\",\"*\",`VolumeSource) - Provides information about the underlying storage allocation of the volume.\nThis may not be available for some pool types.`)),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"size\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#size\",\"aria-label\":\"size permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"size\")),` (string) - Providing the total storage allocation for the volume.\nThis may be smaller than the logical capacity if the volume is sparsely allocated.\nIt may also be larger than the logical capacity if the volume has substantial metadata overhead.\nIf omitted when creating a volume, the volume will be fully allocated at time of creation.\nIf set to a value smaller than the capacity, the pool has the option of deciding to sparsely allocate a volume.\nIt does not have to honour requests for sparse allocation though.\nDifferent types of pools may treat sparse volumes differently.\nFor example, the logical pool will not automatically expand volume's allocation when it gets full;`)),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"capacity\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#capacity\",\"aria-label\":\"capacity permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"capacity\")),` (string) - Providing the logical capacity for the volume. This value is in bytes by default,\nbut a unit attribute can be specified with the same semantics as for allocation\nThis is compulsory when creating a volume.`)),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"readonly\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#readonly\",\"aria-label\":\"readonly permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"readonly\")),\" (bool) - If true, it indicates the device cannot be modified by the guest.\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"target_dev\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#target_dev\",\"aria-label\":\"target_dev permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"target_dev\")),` (string) - DEPRECATED!\nThe device order on the bus is determined automatically from the order of definition`)),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"bus\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#bus\",\"aria-label\":\"bus permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"bus\")),` (string) - The optional bus attribute specifies the type of disk device to emulate;\npossible values are driver specific, with typical values being\n`,mdx(\"inlineCode\",{parentName:\"p\"},\"ide\"),\", \",mdx(\"inlineCode\",{parentName:\"p\"},\"scsi\"),\", \",mdx(\"inlineCode\",{parentName:\"p\"},\"virtio\"),\", \",mdx(\"inlineCode\",{parentName:\"p\"},\"xen\"),\", \",mdx(\"inlineCode\",{parentName:\"p\"},\"usb\"),\", \",mdx(\"inlineCode\",{parentName:\"p\"},\"sata\"),\", or \",mdx(\"inlineCode\",{parentName:\"p\"},\"sd\"),\" \",mdx(\"inlineCode\",{parentName:\"p\"},\"sd\"),` since 1.1.2.\nIf omitted, the bus type is inferred from the style of the device name\n(e.g. a device named 'sda' will typically be exported using a SCSI bus).`)),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"alias\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#alias\",\"aria-label\":\"alias permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"alias\")),` (string) - To help users identifying devices they care about, every device can have an alias which must be unique within the domain.\nAdditionally, the identifier must consist only of the following characters: `,mdx(\"inlineCode\",{parentName:\"p\"},\"[a-zA-Z0-9_-]\"),\".\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"format\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#format\",\"aria-label\":\"format permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"format\")),\" (string) - Specifies the volume format type, like \",mdx(\"inlineCode\",{parentName:\"p\"},\"qcow\"),\", \",mdx(\"inlineCode\",{parentName:\"p\"},\"qcow2\"),\", \",mdx(\"inlineCode\",{parentName:\"p\"},\"vmdk\"),\", \",mdx(\"inlineCode\",{parentName:\"p\"},\"raw\"),`. If omitted, the storage pool's default format\nwill be used.`)),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"device\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#device\",\"aria-label\":\"device permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"device\")),' (string) - Specifies the device type. If omitted, defaults to \"disk\". Can be ',mdx(\"inlineCode\",{parentName:\"p\"},\"disk\"),\", \",mdx(\"inlineCode\",{parentName:\"p\"},\"floppy\"),\", \",mdx(\"inlineCode\",{parentName:\"p\"},\"cdrom\"),\" or \",mdx(\"inlineCode\",{parentName:\"p\"},\"lun\"),\".\"))),mdx(\"h4\",e({},{className:\"g-type-display-5\",id:\"backing-store-volume-source\"}),mdx(\"a\",e({parentName:\"h4\"},{className:\"__permalink-h\",href:\"#backing-store-volume-source\",\"aria-label\":\"backing store volume source permalink\"}),\"\\xBB\"),\"Backing-store volume source\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Backing-store source instructs libvirt to use an already presented volume as a base for this volume.\"),mdx(\"ul\",null,mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"pool-1\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#pool-1\",\"aria-label\":\"pool permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"pool\")),\" (string) - Specifies the name of the storage pool (managed by libvirt) where the disk source resides\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"volume-1\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#volume-1\",\"aria-label\":\"volume permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"volume\")),\" (string) - Specifies the name of storage volume (managed by libvirt) used as the disk source.\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"path\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#path\",\"aria-label\":\"path permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"path\")),\" (string) - The file backing the volume. Mutually exclusive with pool and volume args!\"))),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Example\"),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"volume\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"target_dev\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"sda\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"bus\"),\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"sata\"'),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"pool\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"default\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"name\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"custom-image\"'),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"source\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"type\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"backing-store\"'),`\n`,`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"pool\"),\"   \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"base-images\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"volume\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"ubuntu-22.04-lts\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"capacity\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"20G\"'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"h4\",e({},{className:\"g-type-display-5\",id:\"cloning-a-volume\"}),mdx(\"a\",e({parentName:\"h4\"},{className:\"__permalink-h\",href:\"#cloning-a-volume\",\"aria-label\":\"cloning a volume permalink\"}),\"\\xBB\"),\"Cloning a volume\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`If you wish to clone a volume instead of using a backing store overlay described above,\nYou have the option to use the `,mdx(\"inlineCode\",{parentName:\"p\"},\"cloning\"),\" source type.\"),mdx(\"ul\",null,mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"volume-2\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"a\",e({parentName:\"li\"},{href:\"#volume-2\",\"aria-label\":\"volume permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"volume\")),\" (string) - Specifies the name of storage volume (managed by libvirt) used as the disk source.\")),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Example\"),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"volume\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"target_dev\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"sda\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"bus\"),\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"sata\"'),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"pool\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"default\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"name\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"custom-image\"'),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"source\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"type\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"cloning\"'),`\n`,`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"pool\"),\"   \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"base-images\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"volume\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"ubuntu-22.04-lts\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"h4\",e({},{className:\"g-type-display-5\",id:\"cloud-init-volume-source\"}),mdx(\"a\",e({parentName:\"h4\"},{className:\"__permalink-h\",href:\"#cloud-init-volume-source\",\"aria-label\":\"cloud init volume source permalink\"}),\"\\xBB\"),\"Cloud-init volume source\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Linux domains running in a libvirt environment can be set up with the\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"https://cloudinit.readthedocs.io/en/latest/topics/datasources/nocloud.html\"}),\"NoCloud cloud-init datasource\"),`.\nThis means a small ISO image with the label `,mdx(\"inlineCode\",{parentName:\"p\"},\"CIDATA\"),` will be assembled at the machine running packer and will be uploaded to the volume.\nTo assemble an ISO image, one of the following commands must be installed at the machine running packer and must be available\nin the `,mdx(\"inlineCode\",{parentName:\"p\"},\"PATH\"),\": \",mdx(\"inlineCode\",{parentName:\"p\"},\"xorriso\"),\", \",mdx(\"inlineCode\",{parentName:\"p\"},\"mkisofs\"),\", \",mdx(\"inlineCode\",{parentName:\"p\"},\"hdiutil\"),\" or \",mdx(\"inlineCode\",{parentName:\"p\"},\"oscdimg\"),\".\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"For cloud-init backed sources, the size and capacity attributes can be omitted for the volume.\"),mdx(\"ul\",null,mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"meta_data\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#meta_data\",\"aria-label\":\"meta_data permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"meta_data\")),\" (\",\"*\",\"string) - \",\"[optional]\",` NoCloud instance metadata as string.\nIf not present, a default one will be generated with the instance-id set to the same value as the domain name\nIf you want to set network config, see the `,mdx(\"inlineCode\",{parentName:\"p\"},\"network_config\"),\" attribute\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"user_data\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#user_data\",\"aria-label\":\"user_data permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"user_data\")),\" (\",\"*\",\"string) - \",\"[optional]\",` CloudInit user-data as string.\nSee `,mdx(\"a\",e({parentName:\"p\"},{href:\"https://cloudinit.readthedocs.io/en/latest/topics/format.html\"}),\"cloud-init documentation\"),\" for more\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"network_config\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#network_config\",\"aria-label\":\"network_config permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"network_config\")),\" (\",\"*\",\"string) - \",\"[optional]\",` Network configuration for cloud-init to be picked up.\nUser-data cannot change an instance\\u2019s network configuration.\nIn the absence of network configuration in any sources,\nCloud-init will write out a network configuration that will issue a DHCP request on a \\u201Cfirst\\u201D network interface.\nRead more about the possible format and features at\n`,mdx(\"a\",e({parentName:\"p\"},{href:\"https://cloudinit.readthedocs.io/en/latest/topics/network-config.html\"}),\"cloud-init documentation\"),\".\"))),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Example:\"),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"volume\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"target_dev\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"sdb\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"bus\"),\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"sata\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"source\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"type\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"cloud-init\"'),`\n`,`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"meta_data\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" jsonencode(\",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"instance-id\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"i-abcdefghijklm\"'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"hostname\"'),\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"my-packer-builder\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),\")\",`\n`,`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"user_data\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\"  format(\",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"#cloud-config\\\\n%s\"'),\", jsonencode(\",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"packages\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"            \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"qemu-guest-agent\"'),\",\",`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"runcmd\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"            \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"systemctl\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"enable\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"--now\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"qemu-guest-agent\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),\",\",`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"ssh_authorized_keys\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"            data.sshkey.install.public_key,\",`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),\"))\",`\n`,`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"network_config\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" jsonencode(\",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"version\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token number\"}),\"2\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"ethernets\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"            \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"eth\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"                \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"match\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"                    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"name\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"en*\"'),`\n`,\"                \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"                \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"dhcp4\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token boolean\"}),\"true\"),`\n`,\"            \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),\")\",`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"h4\",e({},{className:\"g-type-display-5\",id:\"external-volume-source\"}),mdx(\"a\",e({parentName:\"h4\"},{className:\"__permalink-h\",href:\"#external-volume-source\",\"aria-label\":\"external volume source permalink\"}),\"\\xBB\"),\"External volume source\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`An external volume source defines a volume source that is external (or remote) to\nthe libvirt hypervisor. This usually means a cloud image or installation media\nfrom the web or local machine. It's using go-getter under the hood with support\nfor HTTP, HTTPS, S3, SMB and local files. The files will be cached by Packer.`),mdx(\"ul\",null,mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"checksum\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#checksum\",\"aria-label\":\"checksum permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"checksum\")),\" (string) - The checksum and the type of the checksum for the download\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"urls\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#urls\",\"aria-label\":\"urls permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"urls\")),\" ([]string) - A list of URLs from where this volume can be obtained\"))),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Example:\"),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"volume\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"alias\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"artifact\"'),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"pool\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"base-images\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"name\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"ubuntu-22.04-lts\"'),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"source\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"type\"),\"     \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"external\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"urls\"),\"     \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64-disk-kvm.img\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"checksum\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"2a0d8745dee674a7f3038d627d39ff68e5d7276f97866a4abd9ebfcb3df5fa05\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"format\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"qcow2\"'),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"capacity\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"1G\"'),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"bus\"),\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"sata\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"target_dev\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"sda\"'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,`\n`)),mdx(\"h4\",e({},{className:\"g-type-display-5\",id:\"files-volume-source\"}),mdx(\"a\",e({parentName:\"h4\"},{className:\"__permalink-h\",href:\"#files-volume-source\",\"aria-label\":\"files volume source permalink\"}),\"\\xBB\"),\"Files volume source\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Create an image with files local to where packer runs and make it available at boot time.\nDepending on the parent volume's `,mdx(\"inlineCode\",{parentName:\"p\"},\"device\"),` attribute, the result will be a cdrom or a floppy image.\nUse this volume source scarcely, for example when the files needed as early as boot time.\nIn general, making local files available on the remote machine is better done with the file provisioner.\nFloppies must not exceed the size 1.44MiB.`),mdx(\"ul\",null,mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"files\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#files\",\"aria-label\":\"files permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"files\")),` ([]string) - Files can be either files or directories. An files provided here will\nbe written to the root of the CD or Floppy. Directories will be written to the\nroot of the CD as well, but will retain their subdirectory structure.\nFor a cdrom, the behaviour is the same as `,mdx(\"inlineCode\",{parentName:\"p\"},\"cd_files\"),`. For floppy disks, the behaviour\nis the same as for `,mdx(\"inlineCode\",{parentName:\"p\"},\"floppy_dirs\"),\"!\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"contents\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#contents\",\"aria-label\":\"contents permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"contents\")),\" (map\",\"[string]\",`string) - Key/Value pairs to add to the CD or Floppy. The keys represent the paths, and the values\nrepresent the contents. Can be used together with `,mdx(\"inlineCode\",{parentName:\"p\"},\"files\"),`. If any paths are specified by\nboth, `,mdx(\"inlineCode\",{parentName:\"p\"},\"contents\"),\" will take precedence.\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"label\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#label\",\"aria-label\":\"label permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"label\")),\" (string) - Label\"))),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Examples:\"),mdx(\"ul\",null,mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),\"Create a floppy disk for unattended Windows installation *\")),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"volume\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"alias\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"unattend\"'),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"device\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"floppy\"'),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"source\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"type\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"files\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"label\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"unattend\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"contents\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),'\"Unattend.xml\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" templatefile(\",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"',mdx(\"span\",e({parentName:\"span\"},{className:\"token interpolation\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"$\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"{\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token keyword\"}),\"path\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token type variable\"}),\"root\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"}\")),'/Unattend.xml.tmpl\"'),\", \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"ComputerName\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"MyMachine\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),\")\",`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"ul\",null,mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),\"Create a CDROM for drivers stored locally\")),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"volume\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"alias\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"drivers\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"device\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"cdrom\"'),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"source\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"type\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"files\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"label\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"drivers\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"files\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"./drivers/*\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"h3\",e({},{className:\"g-type-display-4\",id:\"network\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#network\",\"aria-label\":\"network permalink\"}),\"\\xBB\"),\"Network\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Network interfaces can be attached to a builder domain by adding a \",mdx(\"inlineCode\",{parentName:\"p\"},\"network_interface { }\"),` block for each.\nCurrently only `,mdx(\"inlineCode\",{parentName:\"p\"},\"managed\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"bridge\"),\" networks are supported.\"),mdx(\"ul\",null,mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"type\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"a\",e({parentName:\"li\"},{href:\"#type\",\"aria-label\":\"type permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"type\")),\" (string) - \",\"[required]\",\" Type of attached network interface\")),mdx(\"ul\",null,mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"mac\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#mac\",\"aria-label\":\"mac permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"mac\")),\" (string) - \",\"[optional]\",` If needed, a MAC address can be specified for the network interface.\nIf not specified, Libvirt will generate and assign a random MAC address`)),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"alias-1\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#alias-1\",\"aria-label\":\"alias permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"alias\")),\" (string) - \",\"[optional]\",` To help users identifying devices they care about, every device can have an alias which must be unique within the domain.\nAdditionally, the identifier must consist only of the following characters: `,mdx(\"inlineCode\",{parentName:\"p\"},\"[a-zA-Z0-9_-]\"),\".\")),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"model\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"p\",e({parentName:\"li\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"p\"},{href:\"#model\",\"aria-label\":\"model permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"model\")),\" (string) - \",\"[optional]\",` Defines how the interface should be modeled for the domain.\nTypical values for QEMU and KVM include: `,mdx(\"inlineCode\",{parentName:\"p\"},\"ne2k_isa\"),\" \",mdx(\"inlineCode\",{parentName:\"p\"},\"i82551\"),\" \",mdx(\"inlineCode\",{parentName:\"p\"},\"i82557b\"),\" \",mdx(\"inlineCode\",{parentName:\"p\"},\"i82559er\"),\" \",mdx(\"inlineCode\",{parentName:\"p\"},\"ne2k_pci\"),\" \",mdx(\"inlineCode\",{parentName:\"p\"},\"pcnet\"),\" \",mdx(\"inlineCode\",{parentName:\"p\"},\"rtl8139\"),\" \",mdx(\"inlineCode\",{parentName:\"p\"},\"e1000\"),\" \",mdx(\"inlineCode\",{parentName:\"p\"},\"virtio\"),`.\nIf nothing is specified, `,mdx(\"inlineCode\",{parentName:\"p\"},\"virtio\"),\" will be used as a default.\"))),mdx(\"h4\",e({},{className:\"g-type-display-5\",id:\"communicators-and-network-interfaces\"}),mdx(\"a\",e({parentName:\"h4\"},{className:\"__permalink-h\",href:\"#communicators-and-network-interfaces\",\"aria-label\":\"communicators and network interfaces permalink\"}),\"\\xBB\"),\"Communicators and network interfaces\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`If an SSH or WinRM address is specified in the communicator block, packer will use that address to communicate with the\nbuilder domain.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`If no SSH or WinRM address is specified, the libvirt builder tries to find an address for initiating communications.\nIf only one network interface is specified for a builder domain, and there is no `,mdx(\"inlineCode\",{parentName:\"p\"},\"communicator_interface\"),` specified for\nthe domain, then that interface will be used as the interface for communication.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`If more than one network interface is specified, the communicator interface must be tagged by setting the same alias as\nspecified with the `,mdx(\"inlineCode\",{parentName:\"p\"},\"communicator_interface\"),' domain attribute (which is \"communicator\" by default.)'),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"The \",mdx(\"inlineCode\",{parentName:\"p\"},\"network_address_source\"),` domain attribute controls how the address discovery will take place. There are three\npossible way to discover a domain's virtual address:`),mdx(\"ul\",null,mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"agent\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"a\",e({parentName:\"li\"},{href:\"#agent\",\"aria-label\":\"agent permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"agent\")),\": this is the most reliable method for getting an address for the domain, but it requires \",mdx(\"inlineCode\",{parentName:\"li\"},\"qemu-guest-agent\"),`\nrunning in the domain. This is the default method for domains.`),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"lease\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"a\",e({parentName:\"li\"},{href:\"#lease\",\"aria-label\":\"lease permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"lease\")),`: if for some reason, the guest agent can not be started, but the communicator interface is connected to\none of libvirt's managed networks, you can use `,mdx(\"inlineCode\",{parentName:\"li\"},\"lease\"),\" to see what DHCP lease was offered for the interface.\"),mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"arp\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"a\",e({parentName:\"li\"},{href:\"#arp\",\"aria-label\":\"arp permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"arp\")),`: this method relies on the libvirt host ARP table to find an IP address associated with the MAC address given to\nthe domain.`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"Examples\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"For connecting to a managed network\"),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"network_interface\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"type\"),\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"managed\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"network\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"my-managed-network\"'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"For connecting to a bridge\"),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"network_interface\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"type\"),\"   \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"bridge\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"bridge\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"br0\"'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)),mdx(\"h3\",e({},{className:\"g-type-display-4\",id:\"graphics-and-video-headless-domains\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#graphics-and-video-headless-domains\",\"aria-label\":\"graphics and video headless domains permalink\"}),\"\\xBB\"),\"Graphics and video, headless domains\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`Libvirt builder creates a headless domain by default with no video card or monitor attached to it. Most linux distributions\nand cloud images are fine with this setup, but you might need to add a video card and a graphical interface to your machine.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"You can add one (or more) graphic device to your machine by using the \",mdx(\"inlineCode\",{parentName:\"p\"},\"graphics { }\"),` block.\nIf at least one graphic device is added to the builder configuration, a video device with the model `,mdx(\"inlineCode\",{parentName:\"p\"},\"virtio\"),` will\nautomatically be added to the domain.\nCurrently, there is no option to specify or customize just a video device for a domain.`),mdx(\"ul\",null,mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"type-1\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"a\",e({parentName:\"li\"},{href:\"#type-1\",\"aria-label\":\"type permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"type\")),\" (string) - Type of the graphic defined with this block. Required. Must be either \",mdx(\"inlineCode\",{parentName:\"li\"},\"vnc\"),\" or \",mdx(\"inlineCode\",{parentName:\"li\"},\"sdl\"),\".\")),mdx(\"ul\",null,mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"display\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"a\",e({parentName:\"li\"},{href:\"#display\",\"aria-label\":\"display permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"display\")),\" (string) - An X11 Display number where the SDL window will be sent. Required for type \",mdx(\"inlineCode\",{parentName:\"li\"},\"sdl\"))),mdx(\"ul\",null,mdx(\"li\",e({parentName:\"ul\"},{className:\"g-type-long-body\"}),mdx(\"a\",e({parentName:\"li\"},{id:\"port\",className:\"__target-lic\",\"aria-hidden\":\"true\"})),mdx(\"a\",e({parentName:\"li\"},{href:\"#port\",\"aria-label\":\"port permalink\",className:\"__permalink-lic\"}),mdx(\"inlineCode\",{parentName:\"a\"},\"port\")),` (int) - TCP port used for VNC server to listen on.\nThe number zero means the hypervisor will pick a free port randomly.\nIf not set, the autoport feature will be used.`)),mdx(\"h3\",e({},{className:\"g-type-display-4\",id:\"debugging-a-build\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#debugging-a-build\",\"aria-label\":\"debugging a build permalink\"}),\"\\xBB\"),\"Debugging a build\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"By default, Libvirt builder assigns two serial console to the domain with the aliases \",mdx(\"inlineCode\",{parentName:\"p\"},\"serial-console\"),\" and \",mdx(\"inlineCode\",{parentName:\"p\"},\"virtual-console\"),`.\nYou can use your virtual manager to connect to one of these consoles for debug.`),mdx(\"p\",e({},{className:\"g-type-long-body\"}),\"If you don't have access to a virtual machine manager, if specifying the \",mdx(\"inlineCode\",{parentName:\"p\"},\"-debug\"),\" flag and \",mdx(\"inlineCode\",{parentName:\"p\"},\"PACKER_LOG=1\"),` environment\nvariable to packer simultaneously while setting the `,mdx(\"inlineCode\",{parentName:\"p\"},\"PACKER_LIBVIRT_STREAM_CONSOLE\"),` to one of the console aliases,\nthe builder will connect to that console and logs any message the domain sends to that console.\nIn no way, shape or form should this be used in any production or serious setup!`),mdx(\"h3\",e({},{className:\"g-type-display-4\",id:\"a-simple-builder-definition-example\"}),mdx(\"a\",e({parentName:\"h3\"},{className:\"__permalink-h\",href:\"#a-simple-builder-definition-example\",\"aria-label\":\"a simple builder definition example permalink\"}),\"\\xBB\"),\"A simple builder definition example\"),mdx(\"p\",e({},{className:\"g-type-long-body\"}),`The following example will download and then upload an ubuntu cloud image to the default storage pool, then starts a\nlibvirt domain accessing the default libvirt network. Additionally, the example will create an SSH key and add\na cloud-init image to the domain in order to enable Packer to connect to the domain and run provisioners.`),mdx(\"pre\",e({},{className:\"language-hcl\"}),mdx(\"code\",e({parentName:\"pre\"},{className:\"language-hcl\"}),mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"packer\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"required_plugins\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"sshkey\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"version\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\">= 1.0.1\"'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"source\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"github.com/ivoronin/sshkey\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"libvirt\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"version\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\">= 0.5.0\"'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"source\"),\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"github.com/thomasklein94/libvirt\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"data \",mdx(\"span\",e({parentName:\"span\"},{className:\"token type variable\"}),'\"sshkey\"')),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"install\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,`\n`,\"source \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"libvirt\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"example\"'),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"libvirt_uri\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"qemu:///system\"'),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"vcpu\"),\"   \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token number\"}),\"1\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"memory\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token number\"}),\"846\"),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"network_interface\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"type\"),\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"managed\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"alias\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"communicator\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"# https://developer.hashicorp.com/packer/plugins/builders/libvirt#communicators-and-network-interfaces\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"communicator\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"communicator\"),\"         \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"ssh\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"ssh_username\"),\"         \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"ubuntu\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"ssh_private_key_file\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" data.sshkey.install.private_key_path\",`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"network_address_source\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"lease\"'),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"volume\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"alias\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"artifact\"'),`\n`,`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"source\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"type\"),\"     \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"external\"'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token comment\"}),\"# With newer releases, the URL and the checksum can change.\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"urls\"),\"     \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"https://cloud-images.ubuntu.com/releases/22.04/release-20230302/ubuntu-22.04-server-cloudimg-amd64-disk-kvm.img\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"checksum\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"3b11d66d8211a8c48ed9a727b9a74180ac11cd8118d4f7f25fc7d1e4a148eddc\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"capacity\"),\"   \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"10G\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"target_dev\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"sda\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"bus\"),\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"sata\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"format\"),\"     \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"qcow2\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"volume\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"source\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"type\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"cloud-init\"'),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"user_data\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" format(\",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"#cloud-config\\\\n%s\"'),\", jsonencode(\",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"ssh_authorized_keys\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"          data.sshkey.install.public_key,\",`\n`,\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),\"))\",`\n`,`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"target_dev\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"sdb\"'),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"bus\"),\"        \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"sata\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"shutdown_mode\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"acpi\"'),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"build\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"sources\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"source.libvirt.example\"'),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"provisioner\",mdx(\"span\",e({parentName:\"span\"},{className:\"token type variable\"}),' \"shell\" ')),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"inline\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"[\"),`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"echo The domain has started and became accessible\"'),\",\",`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"echo The domain has the following addresses\"'),\",\",`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"ip -br a\"'),\",\",`\n`,\"      \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"echo if you want to connect via SSH use the following key: ',mdx(\"span\",e({parentName:\"span\"},{className:\"token interpolation\"}),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"$\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"{\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token keyword\"}),\"data\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\".\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token type variable\"}),\"sshkey\"),mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\".\"),\"install\",mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\".\"),\"private_key_path\",mdx(\"span\",e({parentName:\"span\"},{className:\"token punctuation\"}),\"}\")),'\"'),\",\",`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"]\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token keyword\"}),\"provisioner\",mdx(\"span\",e({parentName:\"span\"},{className:\"token type variable\"}),' \"breakpoint\" ')),mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"{\"),`\n`,\"    \",mdx(\"span\",e({parentName:\"code\"},{className:\"token property\"}),\"note\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"=\"),\" \",mdx(\"span\",e({parentName:\"code\"},{className:\"token string\"}),'\"You can examine the created domain with virt-manager, virsh or via SSH\"'),`\n`,\"  \",mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`,mdx(\"span\",e({parentName:\"code\"},{className:\"token punctuation\"}),\"}\"),`\n`)))}MDXContent.isMDXComponent=!0;\n","scope":{}},"product":{"name":"Packer","slug":"packer","algoliaConfig":{"indexName":"product_PACKER","searchOnlyApiKey":"4e1ea7f4bf4335ac43d9f28463e42148"},"analyticsConfig":{"includedDomains":"packer.io www.packer.io","segmentWriteKey":"AjXdfmTTk1I9q9dfyePuDFHBrz1tCO3l"},"datoToken":"88b4984480dad56295a8aadae6caad","metadata":{"title":"Packer by HashiCorp","description":"Packer helps you create golden images for multiple platforms from a single source configuration.","image":"https://www.packer.io/packer-public/img/og-image.png","icon":[{"href":"/packer-public/_favicon.ico"}]},"alertBannerActive":true,"alertBanner":{"tag":"HashiConf","url":"https://hashiconf.com/2023?utm_source=direct&utm_medium=banner&utm_campaign=23Q3_HASHICONFGLOBAL_EVENT&utm_content=&utm_offer=event","text":"Our community conference is taking place in San Francisco and online October 10-12.","linkText":"Register now","expirationDate":""},"version":"1.7.10","basePaths":["docs","guides","intro","downloads"],"rootDocsPaths":[{"iconName":"docs","name":"Documentation","path":"docs"},{"iconName":"guide","name":"Guides","path":"guides"},{"iconName":"plug","name":"Plugins","path":"plugins"}],"integrationsConfig":{"description":"A curated collection of official, partner, and community Packer Integrations."},"currentRootDocsPath":{"iconName":"plug","name":"Plugins","path":"plugins"}}},"__N_SSG":true}